fn filterKernelConvert _val = case classOf _val of (Area : 1;VRayBoxFilter : 2;Catmull_Rom : 3;Cook_Variable : 4;Soften : 5;VRayLanczosFilter : 6;Mitchell_Netravali : 7;VRayMitNetFilter : 7;VRaySincFilter : 8;VRayTriangleFilter : 9;default : 6)

fn appendLineToFile _f _str _var = (

    try(
        _lines = (dotNetClass "System.IO.File").ReadAllLines _f
        while _lines[_lines.count] == "" do deleteItem _lines (_lines.count)
        append _lines (substituteString _str "%" _var)
        (dotNetClass "System.IO.File").WriteAllLines _f _lines
    )catch(print "cannot append line to file...")
)

fn writeToFile _f _str = (

    (dotNetClass "System.IO.File").WriteAllText _f _str
)

fn getObjectHierarchy _o _opath:"" = (
	_opath = "/" + _o.name + _opath
	if _o.parent != undefined do
	(
		_opath = getObjectHierarchy _o.parent _opath:_opath
	)
	_opath
)

fn getObjectsHierarchy _list = (
    _result = ""
    for _o in _list do _result += (getObjectHierarchy _o) + ","
    _result = trimRight _result ","
    _result
)

fn getListenerCurrentPos = (
    setListenerSel #(-1,-1)
    _pos = (getListenerSel())[1]
    _pos
)

fn clearListnerFromPos _from = (
    setListenerSel #(-1,-1)
    _to = (getListenerSel())[2]
    setListenerSel #(_from,_to)
    setListenerSelText ""
    --uiaccessor.closedialog (windows.getchildhwnd 0 "MAXScript Listener")[1]

)

fn maxToHoudiniTransform _t _prerotate = (
    if _prerotate == false then
        ( matrix3 [1,0,0] [0,0,1] [0,-1,0] [0,0,0] ) * _t * inverse( matrix3 [1,0,0] [0,0,1] [0,-1,0] [0,0,0] )
    else
        ( preRotateX ( matrix3 [1,0,0] [0,0,1] [0,-1,0] [0,0,0] ) -90 ) * _t * inverse( matrix3 [1,0,0] [0,0,1] [0,-1,0] [0,0,0] )
)

fn maxToHoudiniGetTransforms _o _prerotate:false _step:1 _substeps:1 = (
    _result = #()
    for _t = animationrange.start.frame to animationrange.end.frame by _step / _substeps do
    (
        append _result #( _t, ( maxToHoudiniTransform ( at time _t _o.transform )  _prerotate ) )
    )
    _result
)

fn normalizeName _name = (
    re = dotnetObject "System.Text.RegularExpressions.Regex" "[^a-zA-Z0-9@]"
    re.Replace _name "_"
)

fn floatToString _float = (
	if findString ( _float as string ) "e" == undefined do (
		_split = FilterString ( _float as string ) "."
		if _split[2] as integer == 0 do _float = _float as integer
	)
    _float as string
)

fn getPropertyValues _o _name _step:1 _substeps:1 _scale:1 = (

    _controller = getPropertyController _o _name
    _property = getProperty _o _name

    _result = #()
    if isController _controller then (
        for _t = animationrange.start.frame to animationrange.end.frame by _step / _substeps do (
            append _result #( _t, ( ( at time _t _controller.value  ) * _scale ) )
        )
    )
    else (
        append _result #( 0, ( _property * _scale ) )
    )
    _result
)

fn isAnimatedTuple _tuple = (

    _firstVal = _tuple[1][2]
    _isAnimated = false
    if _tuple.count > 1 do
    for i = 2 to _tuple.count do (
        --convert as string is needed for comparing two array values (maxscript issue...)
        if _tuple[i][2] as string != _firstVal as string do (
            _isAnimated = true
            exit
        )
    )
    _isAnimated
)

fn formatTuple _tuple = (

    _result = ""
    if ( isAnimatedTuple _tuple ) then (
        _result = "Keys("
        --for i in _tuple do _result += trimLeft( i as string ) "#" + ","
        for i in _tuple do _result += "(" + floatToString i[1] + "," + floatToString i[2] + "),"
        _result = trimRight ( trimRight _result " " ) ","
        _result += ")"
    )else (
        --_result = _tuple[1][2] as string
        _result = floatToString _tuple[1][2]
    )
    _result
)

fn formatBoolean _bool = (

    if _bool == false or _bool == 0 then return "False" else return "True"
)

fn formatColor _color = (

    "Color(" + floatToString( _color.r / 255. ) + "," + floatToString( _color.g / 255. ) + "," + floatToString( _color.b / 255. ) + ")"
)

fn formatAColor _acolor = (

    "AColor(" + floatToString( _acolor.r / 255. ) + "," + floatToString( _acolor.g / 255. ) + "," + floatToString( _acolor.b / 255. ) + "," + floatToString( _acolor.a / 255. ) + ")"
)

fn formatUnits _value = (

    ( _value / 100.0 ) as string
)

fn getValidGeometries = (

    for _o in geometry where _o.isHidden == false and _o.renderable == true collect _o
)

fn extractLightMesh _o = (
	_result = undefined
	if classOf _o == VRayLight do
	if _o.type == 3 do (
		if _o.mesh_source == undefined then (
			_lightMesh = _o.Shape_mesh
			_result = editable_mesh name:(_o.name + "___mesh___")
			try (
				_result.baseObject = _lightMesh[_lightMesh.numSubs]
			)catch(
				_result.baseObject = _lightMesh[_lightMesh.numSubs][_lightMesh[_lightMesh.numSubs].numSubs]
			)
			if _lightMesh.numSubs > 1 do
				for i = _lightMesh.numSubs-1 to 1 by -1 do
					addmodifier _result (_lightMesh[i])
			_o.mesh_source = _result

		)else (
			_result = instance _o.mesh_source
		)
	)
	_result.name = _o.name + "___mesh___"
	_result
)

fn deleteLightMesh _o = (
    _mesh = _o.mesh_source
    for i = _mesh.modifiers.count to 1 by -1 do deleteModifier _mesh _mesh.modifiers[i]
    InstanceMgr.MakeModifiersUnique #(_mesh) (for i = _o.Shape_mesh.numSubs-1 to 1 by -1 collect _o.Shape_mesh[i]) #individual
    delete _mesh
)

fn makeUniqueMaterialAndLayer _list = (
    _result = #()
    for _i in _list do (
        _finded = false
        for _o in _result do (
            if _o.material == _i.material and _o.layer == _i.layer do (
                _finded = true
                break
            )
        )
        if _finded == false do append _result _i
	)
    _result
)

fn isObjectsAnimatedOrDeformable _list = (
    _result = false
    for _o in _list do (
        if  _o.isAnimated or isDeformable _o do (
            _result = true
            break
        )
    )
    _result
)

fn exportGeometries _dir _step:1 _substeps:1 = (
    _str = ""
    _valid_geometries = getValidGeometries()
    _valid_geometries_filtered = makeUniqueMaterialAndLayer _valid_geometries

    with redraw off
    for _o in _valid_geometries_filtered do (

        _similar_geometries = for _i in _valid_geometries where _i.material == _o.material and _i.layer == _o.layer collect _i

        _animated = isObjectsAnimatedOrDeformable _similar_geometries

        _name = normalizeName _o.name

        if _similar_geometries.count > 1 do (
            _name += "__group"

            --then create temp node for .vrmesh export
            _group_header = copy _similar_geometries[1]
            _group_header.name = _name
            _layer = _similar_geometries[1].layer.layerAsRefTarg
            _layer.addNode(_group_header)

            --then temporary hide other nodes for accelerating .vrmesh export
            for _i in _similar_geometries do (
                _i.name += "__hidden"
                _i.isHidden = true
            )
        )

        _abcfile = _dir + _name + ".abc"
        _frange = [0,100]

        if not _animated then _frange = [currenttime.frame, currenttime.frame] else _frange = [animationrange.start.frame, animationrange.end.frame]

        _job = "filename=" + _abcfile
        _job += ";in=" + (_frange[1] as string)
        _job += ";out=" + (_frange[2] as string)
        _job += ";step=" + (_step as string)
        _job += ";substep=" + (_substeps as string)
        _job += ";purepointcache=false"
        _job += ";normals=true"
        _job += ";uvs=true"
        _job += ";materialids=true"
        _job += ";exportselected=false"
        _job += ";objects=" + getObjectsHierarchy _similar_geometries
        _job += ";flattenhierarchy=true"
        _job += ";automaticinstancing=true"
        _job += ";facesets=partitioningFacesetsOnly"
        _job += ";transformCache=false" --TEST
        _job += ";validateMeshTopology=false"
        _job += ";renameConflictingNodes=false"
        _job += ";mergePolyMeshSubtree=false" --TEST
        _job += ";particlesystemtomeshconversion=true"
        _job += ";dynamictopology=true"
        _job += ";storageFormat=hdf5"

        _result = ExocortexAlembic.createExportJobs( _job )

        if( _result != 0 ) do (
            messageBox "Failure - See Maxscript Listener for details." title:"Exocortex Alembic Export"
            _abcfile = ""
        )

        if _abcfile != "" do
        (
            _str += "AlembicGeometry " +  _name + " {\n"
            _str += "  filename=\"" + _abcfile + "\";\n"
            _str += "  object_id=" + _o.gbufferChannel  as string + ";\n"
            _str += "  wirecolor=Color(" + ( _o.wirecolor.r / 255. ) as string + "," + ( _o.wirecolor.g/ 255. ) as string + "," + ( _o.wirecolor.b / 255. ) as string + ");\n"
            _str += "  handle=" + _o.inode.handle as string + ";\n"
            _str += "}\n\n"
        )
    )

    --clearListener()
	_str
)

fn getColorFromTemperature _k = (
    --given a temperature (in Kelvin), estimate an RGB equivalent (based on data)
	_array = #(
	#(999.0, [255,3,0]), #(1008.03, [255,3,0]), #(1017.06, [255,4,0]), #(1026.09, [255,4,0]), #(1035.11, [255,5,0]),
	#(1044.14, [255,5,0]), #(1053.17, [255,5,0]), #(1062.2, [255,7,0]), #(1071.23, [255,7,0]), #(1080.26, [255,8,0]),
	#(1089.29, [255,8,0]), #(1098.31, [255,9,0]), #(1107.34, [255,9,0]), #(1116.37, [255,10,0]), #(1125.4, [255,10,0]),
	#(1134.43, [255,10,0]), #(1143.46, [255,12,0]), #(1152.49, [255,12,0]), #(1161.51, [255,13,0]), #(1170.54, [255,13,0]),
	#(1179.57, [255,13,0]), #(1188.6, [255,14,0]), #(1197.63, [255,14,0]), #(1206.66, [255,15,0]), #(1215.69, [255,16,0]),
	#(1224.71, [255,16,0]), #(1233.74, [255,17,0]), #(1242.77, [255,17,0]), #(1251.8, [255,18,0]), #(1260.83, [255,18,0]),
	#(1269.86, [255,19,0]), #(1278.89, [255,21,0]), #(1287.91, [255,21,0]), #(1296.94, [255,22,0]), #(1305.97, [255,22,0]),
	#(1315.0, [255,22,0]), #(1324.03, [255,23,0]), #(1333.06, [255,23,0]), #(1342.09, [255,25,0]), #(1351.11, [255,25,0]),
	#(1360.14, [255,25,0]), #(1369.17, [255,27,0]), #(1378.2, [255,27,0]), #(1387.23, [255,27,0]), #(1396.26, [255,27,0]),
	#(1405.29, [255,29,0]), #(1414.31, [255,29,0]), #(1423.34, [255,29,0]), #(1432.37, [255,31,0]), #(1441.4, [255,31,0]),
	#(1450.43, [255,31,0]), #(1459.46, [255,33,0]), #(1468.49, [255,33,0]), #(1477.51, [255,33,0]), #(1486.54, [255,33,0]),
	#(1495.57, [255,34,0]), #(1504.6, [255,36,0]), #(1513.63, [255,36,0]), #(1522.66, [255,36,0]), #(1531.69, [255,37,0]),
	#(1540.71, [255,37,0]), #(1549.74, [255,39,0]), #(1558.77, [255,39,0]), #(1567.8, [255,40,0]), #(1576.83, [255,40,0]),
	#(1585.86, [255,40,0]), #(1594.89, [255,41,0]), #(1603.91, [255,41,0]), #(1612.94, [255,43,0]), #(1621.97, [255,44,0]),
	#(1631.0, [255,44,0]), #(1640.03, [255,45,0]), #(1649.06, [255,45,0]), #(1658.09, [255,45,0]), #(1667.11, [255,45,0]),
	#(1676.14, [255,46,0]), #(1685.17, [255,47,0]), #(1694.2, [255,47,0]), #(1703.23, [255,48,0]), #(1712.26, [255,48,0]),
	#(1721.29, [255,50,0]), #(1730.31, [255,51,0]), #(1739.34, [255,51,0]), #(1748.37, [255,52,0]), #(1757.4, [255,52,0]),
	#(1766.43, [255,53,0]), #(1775.46, [255,54,0]), #(1784.49, [255,54,0]), #(1793.51, [255,55,0]), #(1802.54, [255,55,0]),
	#(1811.57, [255,55,0]), #(1820.6, [255,56,0]), #(1829.63, [255,56,0]), #(1838.66, [255,57,0]), #(1847.69, [255,57,0]),
	#(1856.71, [255,58,0]), #(1865.74, [255,59,0]), #(1874.77, [255,59,0]), #(1883.8, [255,60,0]), #(1892.83, [255,60,0]),
	#(1901.86, [255,61,0]), #(1910.89, [255,61,0]), #(1919.91, [255,62,0]), #(1928.94, [255,63,0]), #(1937.97, [255,63,0]),
	#(1947.0, [255,65,1]), #(1956.03, [255,65,1]), #(1965.06, [255,66,1]), #(1974.08, [255,67,1]), #(1983.11, [255,67,1]),
	#(1992.14, [255,68,1]), #(2001.17, [255,68,1]), #(2010.2, [255,69,1]), #(2019.23, [255,69,1]), #(2028.26, [255,70,1]),
	#(2037.28, [255,71,3]), #(2046.31, [255,71,3]), #(2055.34, [255,72,3]), #(2064.37, [255,72,3]), #(2073.4, [255,72,3]),
	#(2082.43, [255,72,4]), #(2091.46, [255,73,4]), #(2100.48, [255,74,4]), #(2109.51, [255,74,4]), #(2118.54, [255,75,5]),
	#(2127.57, [255,75,5]), #(2136.6, [255,77,5]), #(2145.63, [255,77,5]), #(2154.66, [255,78,5]), #(2163.68, [255,79,5]),
	#(2172.71, [255,79,5]), #(2181.74, [255,80,5]), #(2190.77, [255,80,5]), #(2199.8, [255,80,7]), #(2208.83, [255,80,7]),
	#(2217.86, [255,81,7]), #(2226.88, [255,81,8]), #(2235.91, [255,82,8]), #(2244.94, [255,84,8]), #(2253.97, [255,84,8]),
	#(2263.0, [255,85,9]), #(2272.03, [255,85,9]), #(2281.06, [255,86,9]), #(2290.08, [255,86,9]), #(2299.11, [255,86,10]),
	#(2308.14, [255,87,10]), #(2317.17, [255,87,10]), #(2326.2, [255,88,10]), #(2335.23, [255,88,10]), #(2344.26, [255,90,10]),
	#(2353.28, [255,90,10]), #(2362.31, [255,91,12]), #(2371.34, [255,91,12]), #(2380.37, [255,91,12]), #(2389.4, [255,91,13]),
	#(2398.43, [255,92,13]), #(2407.46, [255,94,13]), #(2416.48, [255,94,13]), #(2425.51, [255,95,13]), #(2434.54, [255,95,13]),
	#(2443.57, [255,96,14]), #(2452.6, [255,96,14]), #(2461.63, [255,96,14]), #(2470.66, [255,96,15]), #(2479.68, [255,97,15]),
	#(2488.71, [255,97,15]), #(2497.74, [255,99,16]), #(2506.77, [255,99,16]), #(2515.8, [255,100,16]), #(2524.83, [255,100,17]),
	#(2533.86, [255,100,17]), #(2542.88, [255,101,17]), #(2551.91, [255,101,18]), #(2560.94, [255,103,18]), #(2569.97, [255,103,18]),
	#(2579.0, [255,104,19]), #(2588.03, [255,104,19]), #(2597.06, [255,104,19]), #(2606.08, [255,104,21]), #(2615.11, [255,105,21]),
	#(2624.14, [255,105,22]), #(2633.17, [255,107,22]), #(2642.2, [255,107,22]), #(2651.23, [255,108,22]), #(2660.26, [255,108,22]),
	#(2669.28, [255,108,22]), #(2678.31, [255,108,23]), #(2687.34, [255,109,23]), #(2696.37, [255,109,25]), #(2705.4, [255,111,25]),
	#(2714.43, [255,111,25]), #(2723.46, [255,111,25]), #(2732.48, [255,111,25]), #(2741.51, [255,112,25]), #(2750.54, [255,114,27]),
	#(2759.57, [255,114,27]), #(2768.6, [255,115,27]), #(2777.63, [255,115,27]), #(2786.66, [255,115,27]), #(2795.68, [255,115,29]),
	#(2804.71, [255,117,29]), #(2813.74, [255,117,29]), #(2822.77, [255,118,29]), #(2831.8, [255,118,31]), #(2840.83, [255,118,31]),
	#(2849.86, [255,118,31]), #(2858.88, [255,119,31]), #(2867.91, [255,119,31]), #(2876.94, [255,121,33]), #(2885.97, [255,121,33]),
	#(2895.0, [255,121,33]), #(2904.03, [255,121,33]), #(2913.06, [255,122,33]), #(2922.08, [255,122,34]), #(2931.11, [255,124,34]),
	#(2940.14, [255,124,36]), #(2949.17, [255,124,36]), #(2958.2, [255,124,36]), #(2967.23, [255,124,36]), #(2976.26, [255,125,36]),
	#(2985.28, [255,125,37]), #(2994.31, [255,127,37]), #(3003.34, [255,127,39]), #(3012.37, [255,127,39]), #(3021.4, [255,127,40]),
	#(3030.43, [255,128,40]), #(3039.46, [255,128,40]), #(3048.48, [255,130,40]), #(3057.51, [255,130,40]), #(3066.54, [255,130,41]),
	#(3075.57, [255,130,41]), #(3084.6, [255,131,43]), #(3093.63, [255,131,43]), #(3102.66, [255,133,44]), #(3111.68, [255,133,44]),
	#(3120.71, [255,133,45]), #(3129.74, [255,133,45]), #(3138.77, [255,135,45]), #(3147.8, [255,135,45]), #(3156.83, [255,135,46]),
	#(3165.86, [255,136,46]), #(3174.88, [255,136,46]), #(3183.91, [255,136,47]), #(3192.94, [255,136,47]), #(3201.97, [255,138,48]),
	#(3211.0, [255,138,48]), #(3220.03, [255,139,50]), #(3229.06, [255,139,50]), #(3238.08, [255,139,51]), #(3247.11, [255,139,51]),
	#(3256.14, [255,141,52]), #(3265.17, [255,141,52]), #(3274.2, [255,141,53]), #(3283.23, [255,141,53]), #(3292.26, [255,141,54]),
	#(3301.28, [255,142,54]), #(3310.31, [255,142,55]), #(3319.34, [255,144,55]), #(3328.37, [255,144,55]), #(3337.4, [255,144,55]),
	#(3346.43, [255,144,56]), #(3355.46, [255,146,56]), #(3364.48, [255,146,57]), #(3373.51, [255,146,57]), #(3382.54, [255,147,58]),
	#(3391.57, [255,147,58]), #(3400.6, [255,147,59]), #(3409.63, [255,147,59]), #(3418.66, [255,149,60]), #(3427.68, [255,149,60]),
	#(3436.71, [255,149,61]), #(3445.74, [255,149,61]), #(3454.77, [255,149,62]), #(3463.8, [255,151,62]), #(3472.83, [255,151,63]),
	#(3481.86, [255,152,63]), #(3490.88, [255,152,65]), #(3499.91, [255,152,66]), #(3508.94, [255,152,66]), #(3517.97, [255,152,67]),
	#(3527.0, [255,154,67]), #(3536.03, [255,154,68]), #(3545.06, [255,154,68]), #(3554.08, [255,154,69]), #(3563.11, [255,156,69]),
	#(3572.14, [255,156,70]), #(3581.17, [255,156,70]), #(3590.2, [255,157,71]), #(3599.23, [255,157,71]), #(3608.26, [255,157,72]),
	#(3617.28, [255,157,72]), #(3626.31, [255,159,72]), #(3635.34, [255,159,72]), #(3644.37, [255,159,73]), #(3653.4, [255,159,74]),
	#(3662.43, [255,159,74]), #(3671.46, [255,161,75]), #(3680.48, [255,161,75]), #(3689.51, [255,161,77]), #(3698.54, [255,161,77]),
	#(3707.57, [255,161,78]), #(3716.6, [255,162,78]), #(3725.63, [255,162,79]), #(3734.66, [255,164,79]), #(3743.68, [255,164,80]),
	#(3752.71, [255,164,80]), #(3761.74, [255,164,80]), #(3770.77, [255,164,81]), #(3779.8, [255,166,81]), #(3788.83, [255,166,82]),
	#(3797.85, [255,166,82]), #(3806.88, [255,166,84]), #(3815.91, [255,166,84]), #(3824.94, [255,168,85]), #(3833.97, [255,168,85]),
	#(3843.0, [255,168,86]), #(3852.03, [255,169,86]), #(3861.05, [255,169,86]), #(3870.08, [255,169,87]), #(3879.11, [255,169,87]),
	#(3888.14, [255,169,88]), #(3897.17, [255,171,88]), #(3906.2, [255,171,90]), #(3915.23, [255,171,90]), #(3924.25, [255,171,91]),
	#(3933.28, [255,171,91]), #(3942.31, [255,173,91]), #(3951.34, [255,173,92]), #(3960.37, [255,173,92]), #(3969.4, [255,173,94]),
	#(3978.43, [255,173,94]), #(3987.45, [255,175,95]), #(3996.48, [255,175,96]), #(4005.51, [255,175,96]), #(4014.54, [255,175,96]),
	#(4023.57, [255,175,96]), #(4032.6, [255,177,97]), #(4041.63, [255,177,97]), #(4050.65, [255,177,99]), #(4059.68, [255,178,100]),
	#(4068.71, [255,178,100]), #(4077.74, [255,178,100]), #(4086.77, [255,178,100]), #(4095.8, [255,178,101]), #(4104.83, [255,180,101]),
	#(4113.85, [255,180,103]), #(4122.88, [255,180,104]), #(4131.91, [255,180,104]), #(4140.94, [255,180,104]), #(4149.97, [255,182,104]),
	#(4159.0, [255,182,105]), #(4168.02, [255,182,105]), #(4177.05, [255,182,107]), #(4186.08, [255,182,108]), #(4195.11, [255,182,108]),
	#(4204.14, [255,184,108]), #(4213.17, [255,184,108]), #(4222.19, [255,184,109]), #(4231.22, [255,184,109]), #(4240.25, [255,184,111]),
	#(4249.28, [255,186,111]), #(4258.31, [255,186,111]), #(4267.34, [255,186,112]), #(4276.36, [255,186,112]), #(4285.39, [255,186,114]),
	#(4294.42, [255,186,115]), #(4303.45, [255,187,115]), #(4312.48, [255,187,115]), #(4321.51, [255,187,115]), #(4330.53, [255,189,117]),
	#(4339.56, [255,189,117]), #(4348.59, [255,189,118]), #(4357.62, [255,189,118]), #(4366.65, [255,189,118]), #(4375.68, [255,191,119]),
	#(4384.7, [255,191,119]), #(4393.73, [255,191,121]), #(4402.76, [255,191,121]), #(4411.79, [255,191,121]), #(4420.82, [255,191,122]),
	#(4429.85, [255,193,122]), #(4438.87, [255,193,124]), #(4447.9, [255,193,124]), #(4456.93, [255,193,124]), #(4465.96, [255,193,125]),
	#(4474.99, [255,193,125]), #(4484.02, [255,195,127]), #(4493.04, [255,195,127]), #(4502.07, [255,195,127]), #(4511.1, [255,195,128]),
	#(4520.13, [255,195,128]), #(4529.16, [255,195,130]), #(4538.19, [255,197,130]), #(4547.21, [255,197,130]), #(4556.24, [255,197,131]),
	#(4565.27, [255,197,131]), #(4574.3, [255,197,133]), #(4583.33, [255,197,133]), #(4592.36, [255,199,133]), #(4601.38, [255,199,133]),
	#(4610.41, [255,199,135]), #(4619.44, [255,199,136]), #(4628.47, [255,199,136]), #(4637.5, [255,199,136]), #(4646.53, [255,201,136]),
	#(4655.55, [255,201,138]), #(4664.58, [255,201,139]), #(4673.61, [255,201,139]), #(4682.64, [255,201,139]), #(4691.67, [255,201,139]),
	#(4700.7, [255,203,141]), #(4709.72, [255,203,141]), #(4718.75, [255,203,141]), #(4727.78, [255,203,142]), #(4736.81, [255,203,142]),
	#(4745.84, [255,203,144]), #(4754.87, [255,205,144]), #(4763.89, [255,205,144]), #(4772.92, [255,205,146]), #(4781.95, [255,205,146]),
	#(4790.98, [255,205,147]), #(4800.01, [255,205,147]), #(4809.04, [255,207,147]), #(4818.06, [255,207,149]), #(4827.09, [255,207,149]),
	#(4836.12, [255,207,149]), #(4845.15, [255,207,149]), #(4854.18, [255,207,151]), #(4863.21, [255,207,152]), #(4872.23, [255,209,152]),
	#(4881.26, [255,209,152]), #(4890.29, [255,209,152]), #(4899.32, [255,209,154]), #(4908.35, [255,209,154]), #(4917.38, [255,209,154]),
	#(4926.4, [255,211,156]), #(4935.43, [255,211,156]), #(4944.46, [255,211,157]), #(4953.49, [255,211,157]), #(4962.52, [255,211,157]),
	#(4971.54, [255,211,159]), #(4980.57, [255,211,159]), #(4989.6, [255,213,159]), #(4998.63, [255,213,159]), #(5007.66, [255,213,161]),
	#(5016.69, [255,213,161]), #(5025.71, [255,213,161]), #(5034.74, [255,213,162]), #(5043.77, [255,215,162]), #(5052.8, [255,215,164]),
	#(5061.83, [255,215,164]), #(5070.86, [255,215,164]), #(5079.88, [255,215,166]), #(5088.91, [255,215,166]), #(5097.94, [255,215,166]),
	#(5106.97, [255,217,168]), #(5116.0, [255,217,168]), #(5125.03, [255,217,169]), #(5134.05, [255,217,169]), #(5143.08, [255,217,169]),
	#(5152.11, [255,217,169]), #(5161.14, [255,217,171]), #(5170.17, [255,219,171]), #(5179.2, [255,219,171]), #(5188.22, [255,219,173]),
	#(5197.25, [255,219,173]), #(5206.28, [255,219,173]), #(5215.31, [255,219,175]), #(5224.34, [255,219,175]), #(5233.37, [255,221,175]),
	#(5242.39, [255,221,175]), #(5251.42, [255,221,177]), #(5260.45, [255,221,178]), #(5269.48, [255,221,178]), #(5278.51, [255,221,178]),
	#(5287.54, [255,221,178]), #(5296.56, [255,223,180]), #(5305.59, [255,223,180]), #(5314.62, [255,223,180]), #(5323.65, [255,223,182]),
	#(5332.68, [255,223,182]), #(5341.71, [255,223,182]), #(5350.73, [255,223,182]), #(5359.76, [255,225,184]), #(5368.79, [255,225,184]),
	#(5377.82, [255,225,184]), #(5386.85, [255,225,186]), #(5395.88, [255,225,186]), #(5404.9, [255,225,186]), #(5413.93, [255,225,186]),
	#(5422.96, [255,227,187]), #(5431.99, [255,227,189]), #(5441.02, [255,227,189]), #(5450.05, [255,227,189]), #(5459.07, [255,227,189]),
	#(5468.1, [255,227,191]), #(5477.13, [255,227,191]), #(5486.16, [255,227,191]), #(5495.19, [255,229,193]), #(5504.22, [255,229,193]),
	#(5513.24, [255,229,193]), #(5522.27, [255,229,193]), #(5531.3, [255,229,195]), #(5540.33, [255,229,195]), #(5549.36, [255,229,195]),
	#(5558.39, [255,231,197]), #(5567.41, [255,231,197]), #(5576.44, [255,231,197]), #(5585.47, [255,231,197]), #(5594.5, [255,231,199]),
	#(5603.53, [255,231,199]), #(5612.56, [255,231,199]), #(5621.58, [255,231,201]), #(5630.61, [255,233,201]), #(5639.64, [255,233,201]),
	#(5648.67, [255,233,201]), #(5657.7, [255,233,203]), #(5666.73, [255,233,203]), #(5675.75, [255,233,203]), #(5684.78, [255,233,205]),
	#(5693.81, [255,233,205]), #(5702.84, [255,235,205]), #(5711.87, [255,235,207]), #(5720.9, [255,235,207]), #(5729.92, [255,235,207]),
	#(5738.95, [255,235,207]), #(5747.98, [255,235,209]), #(5757.01, [255,235,209]), #(5766.04, [255,235,209]), #(5775.07, [255,237,211]),
	#(5784.09, [255,237,211]), #(5793.12, [255,237,211]), #(5802.15, [255,237,211]), #(5811.18, [255,237,213]), #(5820.21, [255,237,213]),
	#(5829.24, [255,237,213]), #(5838.26, [255,237,213]), #(5847.29, [255,239,215]), #(5856.32, [255,239,215]), #(5865.35, [255,239,215]),
	#(5874.38, [255,239,217]), #(5883.41, [255,239,217]), #(5892.43, [255,239,217]), #(5901.46, [255,239,217]), #(5910.49, [255,239,219]),
	#(5919.52, [255,242,219]), #(5928.55, [255,242,219]), #(5937.58, [255,242,221]), #(5946.6, [255,242,221]), #(5955.63, [255,242,221]),
	#(5964.66, [255,242,221]), #(5973.69, [255,242,223]), #(5982.72, [255,242,223]), #(5991.75, [255,242,223]), #(6000.77, [255,242,225]),
	#(6009.8, [255,242,225]), #(6018.83, [255,242,225]), #(6027.86, [255,242,225]), #(6036.89, [255,244,227]), #(6045.92, [255,244,227]),
	#(6054.94, [255,244,227]), #(6063.97, [255,244,229]), #(6073.0, [255,244,229]), #(6082.03, [255,244,229]), #(6091.06, [255,244,229]),
	#(6100.08, [255,244,231]), #(6109.11, [255,246,231]), #(6118.14, [255,246,231]), #(6127.17, [255,246,231]), #(6136.2, [255,246,233]),
	#(6145.23, [255,246,233]), #(6154.25, [255,246,233]), #(6163.28, [255,246,235]), #(6172.31, [255,246,235]), #(6181.34, [255,246,235]),
	#(6190.37, [255,248,235]), #(6199.4, [255,248,237]), #(6208.42, [255,248,237]), #(6217.45, [255,248,237]), #(6226.48, [255,248,239]),
	#(6235.51, [255,248,239]), #(6244.54, [255,248,239]), #(6253.57, [255,248,239]), #(6262.59, [255,248,242]), #(6271.62, [255,250,242]),
	#(6280.65, [255,250,242]), #(6289.68, [255,250,242]), #(6298.71, [255,250,242]), #(6307.74, [255,250,242]), #(6316.76, [255,250,244]),
	#(6325.79, [255,250,244]), #(6334.82, [255,250,244]), #(6343.85, [255,250,246]), #(6352.88, [255,252,246]), #(6361.91, [255,252,246]),
	#(6370.93, [255,252,246]), #(6379.96, [255,252,248]), #(6388.99, [255,252,248]), #(6398.02, [255,252,248]), #(6407.05, [255,252,248]),
	#(6416.08, [255,252,250]), #(6425.1, [255,252,250]), #(6434.13, [255,252,250]), #(6443.16, [255,255,252]), #(6452.19, [255,255,252]),
	#(6461.22, [255,255,252]), #(6470.25, [255,255,252]), #(6479.27, [255,255,255]), #(6488.3, [255,255,255]), #(6497.33, [255,255,255]),
	#(6506.36, [255,255,255]), #(6515.39, [255,255,255]), #(6524.42, [255,255,255]), #(6533.44, [252,255,255]), #(6542.47, [252,252,255]),
	#(6551.5, [252,252,255]), #(6560.53, [250,252,255]), #(6569.56, [250,252,255]), #(6578.59, [250,252,255]), #(6587.61, [250,252,255]),
	#(6596.64, [248,252,255]), #(6605.67, [248,250,255]), #(6614.7, [248,250,255]), #(6623.73, [248,250,255]), #(6632.76, [246,250,255]),
	#(6641.78, [246,250,255]), #(6650.81, [246,250,255]), #(6659.84, [246,248,255]), #(6668.87, [244,248,255]), #(6677.9, [244,248,255]),
	#(6686.93, [244,248,255]), #(6695.95, [244,248,255]), #(6704.98, [242,248,255]), #(6714.01, [242,248,255]), #(6723.04, [242,246,255]),
	#(6732.07, [242,246,255]), #(6741.1, [242,246,255]), #(6750.12, [242,246,255]), #(6759.15, [242,246,255]), #(6768.18, [239,246,255]),
	#(6777.21, [239,246,255]), #(6786.24, [239,244,255]), #(6795.27, [239,244,255]), #(6804.29, [237,244,255]), #(6813.32, [237,244,255]),
	#(6822.35, [237,244,255]), #(6831.38, [237,244,255]), #(6840.41, [237,244,255]), #(6849.44, [235,242,255]), #(6858.46, [235,242,255]),
	#(6867.49, [235,242,255]), #(6876.52, [235,242,255]), #(6885.55, [233,242,255]), #(6894.58, [233,242,255]), #(6903.61, [233,242,255]),
	#(6912.63, [233,242,255]), #(6921.66, [233,242,255]), #(6930.69, [231,242,255]), #(6939.72, [231,242,255]), #(6948.75, [231,239,255]),
	#(6957.78, [231,239,255]), #(6966.8, [231,239,255]), #(6975.83, [229,239,255]), #(6984.86, [229,239,255]), #(6993.89, [229,239,255]),
	#(7002.92, [229,239,255]), #(7011.95, [227,237,255]), #(7020.97, [227,237,255]), #(7030.0, [227,237,255]), #(7039.03, [227,237,255]),
	#(7048.06, [227,237,255]), #(7057.09, [225,237,255]), #(7066.12, [225,237,255]), #(7075.14, [225,237,255]), #(7084.17, [225,235,255]),
	#(7093.2, [225,235,255]), #(7102.23, [223,235,255]), #(7111.26, [223,235,255]), #(7120.29, [223,235,255]), #(7129.31, [223,235,255]),
	#(7138.34, [223,235,255]), #(7147.37, [223,235,255]), #(7156.4, [221,233,255]), #(7165.43, [221,233,255]), #(7174.46, [221,233,255]),
	#(7183.48, [221,233,255]), #(7192.51, [221,233,255]), #(7201.54, [219,233,255]), #(7210.57, [219,233,255]), #(7219.6, [219,233,255]),
	#(7228.63, [219,231,255]), #(7237.65, [219,231,255]), #(7246.68, [217,231,255]), #(7255.71, [217,231,255]), #(7264.74, [217,231,255]),
	#(7273.77, [217,231,255]), #(7282.79, [217,231,255]), #(7291.82, [217,231,255]), #(7300.85, [215,231,255]), #(7309.88, [215,229,255]),
	#(7318.91, [215,229,255]), #(7327.94, [215,229,255]), #(7336.96, [215,229,255]), #(7345.99, [215,229,255]), #(7355.02, [213,229,255]),
	#(7364.05, [213,229,255]), #(7373.08, [213,229,255]), #(7382.11, [213,229,255]), #(7391.13, [213,227,255]), #(7400.16, [213,227,255]),
	#(7409.19, [211,227,255]), #(7418.22, [211,227,255]), #(7427.25, [211,227,255]), #(7436.28, [211,227,255]), #(7445.3, [211,227,255]),
	#(7454.33, [211,227,255]), #(7463.36, [209,227,255]), #(7472.39, [209,225,255]), #(7481.42, [209,225,255]), #(7490.45, [209,225,255]),
	#(7499.47, [209,225,255]), #(7508.5, [209,225,255]), #(7517.53, [207,225,255]), #(7526.56, [207,225,255]), #(7535.59, [207,225,255]),
	#(7544.62, [207,225,255]), #(7553.64, [207,223,255]), #(7562.67, [207,223,255]), #(7571.7, [205,223,255]), #(7580.73, [205,223,255]),
	#(7589.76, [205,223,255]), #(7598.79, [205,223,255]), #(7607.81, [205,223,255]), #(7616.84, [205,223,255]), #(7625.87, [205,223,255]),
	#(7634.9, [203,223,255]), #(7643.93, [203,221,255]), #(7652.96, [203,221,255]), #(7661.98, [203,221,255]), #(7671.01, [203,221,255]),
	#(7680.04, [203,221,255]), #(7689.07, [201,221,255]), #(7698.1, [201,221,255]), #(7707.13, [201,221,255]), #(7716.15, [201,221,255]),
	#(7725.18, [201,221,255]), #(7734.21, [201,219,255]), #(7743.24, [201,219,255]), #(7752.27, [199,219,255]), #(7761.3, [199,219,255]),
	#(7770.32, [199,219,255]), #(7779.35, [199,219,255]), #(7788.38, [199,219,255]), #(7797.41, [199,219,255]), #(7806.44, [199,219,255]),
	#(7815.47, [197,219,255]), #(7824.49, [197,219,255]), #(7833.52, [197,217,255]), #(7842.55, [197,217,255]), #(7851.58, [197,217,255]),
	#(7860.61, [197,217,255]), #(7869.64, [197,217,255]), #(7878.66, [195,217,255]), #(7887.69, [195,217,255]), #(7896.72, [195,217,255]),
	#(7905.75, [195,217,255]), #(7914.78, [195,217,255]), #(7923.81, [195,215,255]), #(7932.83, [195,215,255]), #(7941.86, [195,215,255]),
	#(7950.89, [193,215,255]), #(7959.92, [193,215,255]), #(7968.95, [193,215,255]), #(7977.98, [193,215,255]), #(7987.0, [193,215,255]),
	#(7996.03, [193,215,255]), #(8005.06, [193,215,255]), #(8014.09, [191,215,255]), #(8023.12, [191,215,255]), #(8032.15, [191,213,255]),
	#(8041.17, [191,213,255]), #(8050.2, [191,213,255]), #(8059.23, [191,213,255]), #(8068.26, [191,213,255]), #(8077.29, [191,213,255]),
	#(8086.32, [189,213,255]), #(8095.34, [189,213,255]), #(8104.37, [189,213,255]), #(8113.4, [189,213,255]), #(8122.43, [189,213,255]),
	#(8131.46, [189,211,255]), #(8140.49, [189,211,255]), #(8149.51, [189,211,255]), #(8158.54, [189,211,255]), #(8167.57, [187,211,255]),
	#(8176.6, [187,211,255]), #(8185.63, [187,211,255]), #(8194.66, [187,211,255]), #(8203.68, [186,211,255]), #(8212.71, [186,211,255]),
	#(8221.74, [186,211,255]), #(8230.77, [186,211,255]), #(8239.8, [186,209,255]), #(8248.83, [186,209,255]), #(8257.85, [186,209,255]),
	#(8266.88, [186,209,255]), #(8275.91, [184,209,255]), #(8284.94, [184,209,255]), #(8293.97, [184,209,255]), #(8303.0, [184,209,255]),
	#(8312.02, [184,209,255]), #(8321.05, [184,209,255]), #(8330.08, [184,209,255]), #(8339.11, [184,209,255]), #(8348.14, [184,209,255]),
	#(8357.17, [182,207,255]), #(8366.19, [182,207,255]), #(8375.22, [182,207,255]), #(8384.25, [182,207,255]), #(8393.28, [182,207,255]),
	#(8402.31, [182,207,255]), #(8411.33, [182,207,255]), #(8420.36, [182,207,255]), #(8429.39, [182,207,255]), #(8438.42, [180,207,255]),
	#(8447.45, [180,207,255]), #(8456.48, [180,207,255]), #(8465.5, [180,207,255]), #(8474.53, [180,205,255]), #(8483.56, [180,205,255]),
	#(8492.59, [180,205,255]), #(8501.62, [180,205,255]), #(8510.65, [180,205,255]), #(8519.67, [180,205,255]), #(8528.7, [178,205,255]),
	#(8537.73, [178,205,255]), #(8546.76, [178,205,255]), #(8555.79, [178,205,255]), #(8564.82, [178,205,255]), #(8573.84, [178,205,255]),
	#(8582.87, [178,205,255]), #(8591.9, [178,205,255]), #(8600.93, [178,203,255]), #(8609.96, [177,203,255]), #(8618.99, [177,203,255]),
	#(8628.01, [177,203,255]), #(8637.04, [177,203,255]), #(8646.07, [177,203,255]), #(8655.1, [175,203,255]), #(8664.13, [175,203,255]),
	#(8673.16, [175,203,255]), #(8682.18, [175,203,255]), #(8691.21, [175,203,255]), #(8700.24, [175,203,255]), #(8709.27, [175,203,255]),
	#(8718.3, [175,203,255]), #(8727.33, [175,201,255]), #(8736.35, [175,201,255]), #(8745.38, [175,201,255]), #(8754.41, [173,201,255]),
	#(8763.44, [173,201,255]), #(8772.47, [173,201,255]), #(8781.5, [173,201,255]), #(8790.52, [173,201,255]), #(8799.55, [173,201,255]),
	#(8808.58, [173,201,255]), #(8817.61, [173,201,255]), #(8826.64, [173,201,255]), #(8835.67, [173,201,255]), #(8844.69, [171,201,255]),
	#(8853.72, [171,201,255]), #(8862.75, [171,199,255]), #(8871.78, [171,199,255]), #(8880.81, [171,199,255]), #(8889.84, [171,199,255]),
	#(8898.86, [171,199,255]), #(8907.89, [171,199,255]), #(8916.92, [171,199,255]), #(8925.95, [171,199,255]), #(8934.98, [171,199,255]),
	#(8944.01, [169,199,255]), #(8953.03, [169,199,255]), #(8962.06, [169,199,255]), #(8971.09, [169,199,255]), #(8980.12, [169,199,255]),
	#(8989.15, [169,199,255]), #(8998.18, [169,197,255]), #(9007.2, [169,197,255]), #(9016.23, [169,197,255]), #(9025.26, [169,197,255]),
	#(9034.29, [169,197,255]), #(9043.32, [169,197,255]), #(9052.35, [168,197,255]), #(9061.37, [168,197,255]), #(9070.4, [168,197,255]),
	#(9079.43, [168,197,255]), #(9088.46, [168,197,255]), #(9097.49, [168,197,255]), #(9106.52, [166,197,255]), #(9115.54, [166,197,255]),
	#(9124.57, [166,197,255]), #(9133.6, [166,197,255]), #(9142.63, [166,195,255]), #(9151.66, [166,195,255]), #(9160.69, [166,195,255]),
	#(9169.71, [166,195,255]), #(9178.74, [166,195,255]), #(9187.77, [166,195,255]), #(9196.8, [166,195,255]), #(9205.83, [166,195,255]),
	#(9214.86, [164,195,255]), #(9223.88, [164,195,255]), #(9232.91, [164,195,255]), #(9241.94, [164,195,255]), #(9250.97, [164,195,255]),
	#(9260.0, [164,195,255]), #(9269.03, [164,195,255]), #(9278.05, [164,195,255]), #(9287.08, [164,195,255]), #(9296.11, [164,193,255]),
	#(9305.14, [164,193,255]), #(9314.17, [164,193,255]), #(9323.2, [162,193,255]), #(9332.22, [162,193,255]), #(9341.25, [162,193,255]),
	#(9350.28, [162,193,255]), #(9359.31, [162,193,255]), #(9368.34, [162,193,255]), #(9377.37, [162,193,255]), #(9386.39, [161,193,255]),
	#(9395.42, [161,193,255]), #(9404.45, [161,193,255]), #(9413.48, [161,193,255]), #(9422.51, [161,193,255]), #(9431.54, [161,193,255]),
	#(9440.56, [161,193,255]), #(9449.59, [161,193,255]), #(9458.62, [161,191,255]), #(9467.65, [161,191,255]), #(9476.68, [161,191,255]),
	#(9485.71, [161,191,255]), #(9494.73, [161,191,255]), #(9503.76, [159,191,255]), #(9512.79, [159,191,255]), #(9521.82, [159,191,255]),
	#(9530.85, [159,191,255]), #(9539.88, [159,191,255]), #(9548.9, [159,191,255]), #(9557.93, [159,191,255]), #(9566.96, [159,191,255]),
	#(9575.99, [159,191,255]), #(9585.02, [159,191,255]), #(9594.04, [159,191,255]), #(9603.07, [159,191,255]), #(9612.1, [159,191,255]),
	#(9621.13, [159,191,255]), #(9630.16, [157,189,255]), #(9639.19, [157,189,255]), #(9648.21, [157,189,255]), #(9657.24, [157,189,255]),
	#(9666.27, [157,189,255]), #(9675.3, [157,189,255]), #(9684.33, [157,189,255]), #(9693.36, [157,189,255]), #(9702.38, [157,189,255]),
	#(9711.41, [157,189,255]), #(9720.44, [157,189,255]), #(9729.47, [157,189,255]), #(9738.5, [157,189,255]), #(9747.53, [157,189,255]),
	#(9756.55, [157,189,255]), #(9765.58, [156,189,255]), #(9774.61, [156,189,255]), #(9783.64, [156,189,255]), #(9792.67, [156,189,255]),
	#(9801.7, [156,189,255]), #(9810.72, [156,187,255]), #(9819.75, [156,187,255]), #(9828.78, [154,187,255]), #(9837.81, [154,187,255]),
	#(9846.84, [154,187,255]), #(9855.87, [154,187,255]), #(9864.89, [154,187,255]), #(9873.92, [154,187,255]), #(9882.95, [154,187,255]),
	#(9891.98, [154,187,255]), #(9901.01, [154,186,255]), #(9910.04, [154,186,255]), #(9919.06, [154,186,255]), #(9928.09, [154,186,255]),
	#(9937.12, [154,186,255]), #(9946.15, [154,186,255]), #(9955.18, [154,186,255]), #(9964.21, [154,186,255]), #(9973.23, [152,186,255]),
	#(9982.26, [152,186,255]), #(9991.29, [152,186,255]), #(10000.3, [152,186,255]), #(10009.3, [152,186,255]), #(10018.4, [152,186,255]),
	#(10027.4, [152,186,255]), #(10036.4, [152,186,255]), #(10045.5, [152,186,255]), #(10054.5, [152,186,255]), #(10063.5, [152,186,255]),
	#(10072.5, [152,186,255]), #(10081.6, [152,186,255]), #(10090.6, [152,184,255]), #(10099.6, [152,184,255]), #(10108.7, [152,184,255]),
	#(10117.7, [151,184,255]), #(10126.7, [151,184,255]), #(10135.7, [151,184,255]), #(10144.8, [151,184,255]), #(10153.8, [151,184,255]),
	#(10162.8, [151,184,255]), #(10171.9, [151,184,255]), #(10180.9, [151,184,255]), #(10189.9, [151,184,255]), #(10198.9, [149,184,255]),
	#(10208.0, [149,184,255]), #(10217.0, [149,184,255]), #(10226.0, [149,184,255]), #(10235.1, [149,184,255]), #(10244.1, [149,184,255]),
	#(10253.1, [149,184,255]), #(10262.1, [149,184,255]), #(10271.2, [149,184,255]), #(10280.2, [149,184,255]), #(10289.2, [149,184,255]),
	#(10298.3, [149,182,255]), #(10307.3, [149,182,255]), #(10316.3, [149,182,255]), #(10325.3, [149,182,255]), #(10334.4, [149,182,255]),
	#(10343.4, [149,182,255]), #(10352.4, [147,182,255]), #(10361.5, [147,182,255]), #(10370.5, [147,182,255]), #(10379.5, [147,182,255]),
	#(10388.5, [147,182,255]), #(10397.6, [147,182,255]), #(10406.6, [147,182,255]), #(10415.6, [147,182,255]), #(10424.7, [147,182,255]),
	#(10433.7, [147,182,255]), #(10442.7, [147,182,255]), #(10451.7, [147,182,255]), #(10460.8, [147,182,255]), #(10469.8, [147,182,255]),
	#(10478.8, [147,182,255]), #(10487.8, [147,182,255]), #(10496.9, [147,182,255]), #(10505.9, [147,180,255]), #(10514.9, [147,180,255]),
	#(10524.0, [146,180,255]), #(10533.0, [146,180,255]), #(10542.0, [146,180,255]), #(10551.0, [146,180,255]), #(10560.1, [146,180,255]),
	#(10569.1, [146,180,255]), #(10578.1, [146,180,255]), #(10587.2, [146,180,255]), #(10596.2, [146,180,255]), #(10605.2, [144,180,255]),
	#(10614.2, [144,180,255]), #(10623.3, [144,180,255]), #(10632.3, [144,180,255]), #(10641.3, [144,180,255]), #(10650.4, [144,180,255]),
	#(10659.4, [144,180,255]), #(10668.4, [144,180,255]), #(10677.4, [144,180,255]), #(10686.5, [144,180,255]), #(10695.5, [144,180,255]),
	#(10704.5, [144,180,255]), #(10713.6, [144,180,255]), #(10722.6, [144,180,255]), #(10731.6, [144,180,255]), #(10740.6, [144,178,255]),
	#(10749.7, [144,178,255]), #(10758.7, [144,178,255]), #(10767.7, [144,178,255]), #(10776.8, [144,178,255]), #(10785.8, [142,178,255]),
	#(10794.8, [142,178,255]), #(10803.8, [142,178,255]), #(10812.9, [142,178,255]), #(10821.9, [142,178,255]), #(10830.9, [142,178,255]),
	#(10840.0, [142,178,255]), #(10849.0, [142,178,255]), #(10858.0, [142,178,255]), #(10867.0, [142,178,255]), #(10876.1, [141,178,255]),
	#(10885.1, [141,178,255]), #(10894.1, [141,178,255]), #(10903.2, [141,178,255]), #(10912.2, [141,178,255]), #(10921.2, [141,178,255]),
	#(10930.2, [141,178,255]), #(10939.3, [141,178,255]), #(10948.3, [141,178,255]), #(10957.3, [141,178,255]), #(10966.3, [141,178,255]),
	#(10975.4, [141,177,255]), #(10984.4, [141,177,255]), #(10993.4, [141,177,255]), #(11002.5, [141,177,255]), #(11011.5, [141,177,255]),
	#(11020.5, [141,177,255]), #(11029.5, [141,177,255]), #(11038.6, [141,177,255]), #(11047.6, [141,177,255]), #(11056.6, [141,177,255]),
	#(11065.7, [141,177,255]), #(11074.7, [139,177,255]), #(11083.7, [139,177,255]), #(11092.7, [139,177,255]), #(11101.8, [139,175,255]),
	#(11110.8, [139,175,255]), #(11119.8, [139,175,255]), #(11128.9, [139,175,255]), #(11137.9, [139,175,255]), #(11146.9, [139,175,255]),
	#(11155.9, [139,175,255]), #(11165.0, [139,175,255]), #(11174.0, [139,175,255]), #(11183.0, [139,175,255]), #(11192.1, [139,175,255]),
	#(11201.1, [139,175,255]), #(11210.1, [139,175,255]), #(11219.1, [139,175,255]), #(11228.2, [139,175,255]), #(11237.2, [139,175,255]),
	#(11246.2, [139,175,255]), #(11255.3, [139,175,255]), #(11264.3, [139,175,255]), #(11273.3, [138,175,255]), #(11282.3, [138,175,255]),
	#(11291.4, [138,175,255]), #(11300.4, [138,175,255]), #(11309.4, [138,175,255]), #(11318.5, [138,175,255]), #(11327.5, [138,175,255]),
	#(11336.5, [138,175,255]), #(11345.5, [138,175,255]), #(11354.6, [138,175,255]), #(11363.6, [138,175,255]), #(11372.6, [138,173,255]),
	#(11381.7, [136,173,255]), #(11390.7, [136,173,255]), #(11399.7, [136,173,255]), #(11408.7, [136,173,255]), #(11417.8, [136,173,255]),
	#(11426.8, [136,173,255]), #(11435.8, [136,173,255]), #(11444.9, [136,173,255]), #(11453.9, [136,173,255]), #(11462.9, [136,173,255]),
	#(11471.9, [136,173,255]), #(11481.0, [136,173,255]), #(11490.0, [136,173,255]), #(11499.0, [136,173,255]), #(11508.0, [136,173,255]),
	#(11517.1, [136,173,255]), #(11526.1, [136,173,255]), #(11535.1, [136,173,255]), #(11544.2, [136,173,255]), #(11553.2, [136,173,255]),
	#(11562.2, [136,173,255]), #(11571.2, [136,173,255]), #(11580.3, [136,173,255]), #(11589.3, [136,173,255]), #(11598.3, [136,173,255]),
	#(11607.4, [135,173,255]), #(11616.4, [135,173,255]), #(11625.4, [135,173,255]), #(11634.4, [135,173,255]), #(11643.5, [135,173,255]),
	#(11652.5, [135,171,255]), #(11661.5, [135,171,255]), #(11670.6, [135,171,255]), #(11679.6, [135,171,255]), #(11688.6, [135,171,255]),
	#(11697.6, [135,171,255]), #(11706.7, [135,171,255]), #(11715.7, [135,171,255]), #(11724.7, [133,171,255]), #(11733.8, [133,171,255]),
	#(11742.8, [133,171,255]), #(11751.8, [133,171,255]), #(11760.8, [133,171,255]), #(11769.9, [133,171,255]), #(11778.9, [133,171,255]),
	#(11787.9, [133,171,255]), #(11797.0, [133,171,255]), #(11806.0, [133,171,255]), #(11815.0, [133,171,255]), #(11824.0, [133,171,255]),
	#(11833.1, [133,171,255]), #(11842.1, [133,171,255]), #(11851.1, [133,171,255]), #(11860.2, [133,171,255]), #(11869.2, [133,171,255]),
	#(11878.2, [133,171,255]), #(11887.2, [133,171,255]), #(11896.3, [133,171,255]), #(11905.3, [133,171,255]), #(11914.3, [133,171,255]),
	#(11923.4, [133,171,255]), #(11932.4, [133,171,255]), #(11941.4, [133,171,255]), #(11950.4, [133,169,255]), #(11959.5, [133,169,255]),
	#(11968.5, [131,169,255]), #(11977.5, [131,169,255]), #(11986.5, [131,169,255]), #(11995.6, [131,169,255]), #(12004.6, [131,169,255]),
	#(12013.6, [131,169,255]), #(12022.7, [131,169,255]), #(12031.7, [131,169,255]), #(12040.7, [131,169,255]), #(12049.7, [131,169,255]),
	#(12058.8, [131,169,255]), #(12067.8, [131,169,255]), #(12076.8, [131,169,255]), #(12085.9, [131,169,255]), #(12094.9, [130,169,255]),
	#(12103.9, [130,169,255]), #(12112.9, [130,169,255]), #(12122.0, [130,169,255]), #(12131.0, [130,169,255]), #(12140.0, [130,169,255]),
	#(12149.1, [130,169,255]), #(12158.1, [130,169,255]), #(12167.1, [130,169,255]), #(12176.1, [130,169,255]), #(12185.2, [130,169,255]),
	#(12194.2, [130,169,255]), #(12203.2, [130,169,255]), #(12212.3, [130,169,255]), #(12221.3, [130,169,255]), #(12230.3, [130,169,255]),
	#(12239.3, [130,169,255]), #(12248.4, [130,169,255]), #(12257.4, [130,169,255]), #(12266.4, [130,169,255]), #(12275.5, [130,168,255]),
	#(12284.5, [130,168,255]), #(12293.5, [130,168,255]), #(12302.5, [130,168,255]), #(12311.6, [130,168,255]), #(12320.6, [130,168,255]),
	#(12329.6, [130,168,255]), #(12338.7, [130,168,255]), #(12347.7, [130,168,255]), #(12356.7, [130,168,255]), #(12365.7, [128,168,255]),
	#(12374.8, [128,168,255]), #(12383.8, [128,168,255]), #(12392.8, [128,168,255]), #(12401.9, [128,168,255]), #(12410.9, [128,168,255]),
	#(12419.9, [128,168,255]), #(12428.9, [128,168,255]), #(12438.0, [128,168,255]), #(12447.0, [128,166,255]), #(12456.0, [128,166,255]),
	#(12465.1, [128,166,255]), #(12474.1, [128,166,255]), #(12483.1, [128,166,255]), #(12492.1, [128,166,255]), #(12501.2, [128,166,255]),
	#(12510.2, [127,166,255]), #(12519.2, [127,166,255]), #(12528.2, [127,166,255]), #(12537.3, [127,166,255]), #(12546.3, [127,166,255]),
	#(12555.3, [127,166,255]), #(12564.4, [127,166,255]), #(12573.4, [127,166,255]), #(12582.4, [127,166,255]), #(12591.4, [127,166,255]),
	#(12600.5, [127,166,255]), #(12609.5, [127,166,255]), #(12618.5, [127,166,255]), #(12627.6, [127,166,255]), #(12636.6, [127,166,255]),
	#(12645.6, [127,166,255]), #(12654.6, [127,166,255]), #(12663.7, [127,166,255]), #(12672.7, [127,166,255]), #(12681.7, [127,166,255]),
	#(12690.8, [127,166,255]), #(12699.8, [127,166,255]), #(12708.8, [127,166,255]), #(12717.8, [127,166,255]), #(12726.9, [127,166,255]),
	#(12735.9, [127,166,255]), #(12744.9, [127,166,255]), #(12754.0, [127,166,255]), #(12763.0, [127,166,255]), #(12772.0, [127,166,255]),
	#(12781.0, [127,166,255]), #(12790.1, [127,166,255]), #(12799.1, [127,166,255]), #(12808.1, [125,164,255]), #(12817.2, [125,164,255]),
	#(12826.2, [125,164,255]), #(12835.2, [125,164,255]), #(12844.2, [125,164,255]), #(12853.3, [125,164,255]), #(12862.3, [125,164,255]),
	#(12871.3, [125,164,255]), #(12880.4, [125,164,255]), #(12889.4, [125,164,255]), #(12898.4, [125,164,255]), #(12907.4, [125,164,255]),
	#(12916.5, [125,164,255]), #(12925.5, [125,164,255]), #(12934.5, [125,164,255]), #(12943.6, [125,164,255]), #(12952.6, [125,164,255]),
	#(12961.6, [124,164,255]), #(12970.6, [124,164,255]), #(12979.7, [124,164,255]), #(12988.7, [124,164,255]), #(12997.7, [124,164,255]),
	#(13006.8, [124,164,255]), #(13015.8, [124,164,255]), #(13024.8, [124,164,255]), #(13033.8, [124,164,255]), #(13042.9, [124,164,255]),
	#(13051.9, [124,164,255]), #(13060.9, [124,164,255]), #(13069.9, [124,164,255]), #(13079.0, [124,164,255]), #(13088.0, [124,164,255]),
	#(13097.0, [124,164,255]), #(13106.1, [124,164,255]), #(13115.1, [124,164,255]), #(13124.1, [124,164,255]), #(13133.1, [124,164,255]),
	#(13142.2, [124,164,255]), #(13151.2, [124,164,255]), #(13160.2, [124,164,255]), #(13169.3, [124,164,255]), #(13178.3, [124,164,255]),
	#(13187.3, [124,164,255]), #(13196.3, [124,164,255]), #(13205.4, [124,162,255]), #(13214.4, [124,162,255]), #(13223.4, [124,162,255]),
	#(13232.5, [124,162,255]), #(13241.5, [124,162,255]), #(13250.5, [124,162,255]), #(13259.5, [124,162,255]), #(13268.6, [124,162,255]),
	#(13277.6, [124,162,255]), #(13286.6, [124,162,255]), #(13295.7, [122,162,255]), #(13304.7, [122,162,255]), #(13313.7, [122,162,255]),
	#(13322.7, [122,162,255]), #(13331.8, [122,162,255]), #(13340.8, [122,162,255]), #(13349.8, [122,162,255]), #(13358.9, [122,162,255]),
	#(13367.9, [122,162,255]), #(13376.9, [122,162,255]), #(13385.9, [122,162,255]), #(13395.0, [122,162,255]), #(13404.0, [122,162,255]),
	#(13413.0, [122,161,255]), #(13422.1, [122,161,255]), #(13431.1, [122,161,255]), #(13440.1, [122,161,255]), #(13449.1, [122,161,255]),
	#(13458.2, [122,161,255]), #(13467.2, [121,161,255]), #(13476.2, [121,161,255]), #(13485.3, [121,161,255]), #(13494.3, [121,161,255]),
	#(13503.3, [121,161,255]), #(13512.3, [121,161,255]), #(13521.4, [121,161,255]), #(13530.4, [121,161,255]), #(13539.4, [121,161,255]),
	#(13548.4, [121,161,255]), #(13557.5, [121,161,255]), #(13566.5, [121,161,255]), #(13575.5, [121,161,255]), #(13584.6, [121,161,255]),
	#(13593.6, [121,161,255]), #(13602.6, [121,161,255]), #(13611.6, [121,161,255]), #(13620.7, [121,161,255]), #(13629.7, [121,161,255]),
	#(13638.7, [121,161,255]), #(13647.8, [121,161,255]), #(13656.8, [121,161,255]), #(13665.8, [121,161,255]), #(13674.8, [121,161,255]),
	#(13683.9, [121,161,255]), #(13692.9, [121,161,255]), #(13701.9, [121,161,255]), #(13711.0, [121,161,255]), #(13720.0, [121,161,255]),
	#(13729.0, [121,161,255]), #(13738.0, [121,161,255]), #(13747.1, [121,161,255]), #(13756.1, [121,161,255]), #(13765.1, [121,161,255]),
	#(13774.2, [121,161,255]), #(13783.2, [121,161,255]), #(13792.2, [121,161,255]), #(13801.2, [121,161,255]), #(13810.3, [121,161,255]),
	#(13819.3, [121,161,255]), #(13828.3, [121,161,255]), #(13837.4, [119,161,255]), #(13846.4, [119,161,255]), #(13855.4, [119,159,255]),
	#(13864.4, [119,159,255]), #(13873.5, [119,159,255]), #(13882.5, [119,159,255]), #(13891.5, [119,159,255]), #(13900.6, [119,159,255]),
	#(13909.6, [119,159,255]), #(13918.6, [119,159,255]), #(13927.6, [119,159,255]), #(13936.7, [119,159,255]), #(13945.7, [119,159,255]),
	#(13954.7, [119,159,255]), #(13963.8, [119,159,255]), #(13972.8, [119,159,255]), #(13981.8, [119,159,255]), #(13990.8, [119,159,255]),
	#(13999.9, [119,159,255]), #(14008.9, [119,159,255]), #(14017.9, [119,159,255]), #(14027.0, [119,159,255]), #(14036.0, [118,159,255]),
	#(14045.0, [118,159,255]), #(14054.0, [118,159,255]), #(14063.1, [118,159,255]), #(14072.1, [118,159,255]), #(14081.1, [118,159,255]),
	#(14090.1, [118,159,255]), #(14099.2, [118,159,255]), #(14108.2, [118,159,255]), #(14117.2, [118,159,255]), #(14126.3, [118,159,255]),
	#(14135.3, [118,159,255]), #(14144.3, [118,159,255]), #(14153.3, [118,159,255]), #(14162.4, [118,159,255]), #(14171.4, [118,159,255]),
	#(14180.4, [118,159,255]), #(14189.5, [118,159,255]), #(14198.5, [118,159,255]), #(14207.5, [118,159,255]), #(14216.5, [118,159,255]),
	#(14225.6, [118,159,255]), #(14234.6, [118,159,255]), #(14243.6, [118,159,255]), #(14252.7, [118,159,255]), #(14261.7, [118,159,255]),
	#(14270.7, [118,159,255]), #(14279.7, [118,159,255]), #(14288.8, [118,159,255]), #(14297.8, [118,159,255]), #(14306.8, [118,159,255]),
	#(14315.9, [118,159,255]), #(14324.9, [118,159,255]), #(14333.9, [118,157,255]), #(14342.9, [118,157,255]), #(14352.0, [118,157,255]),
	#(14361.0, [118,157,255]), #(14370.0, [118,157,255]), #(14379.1, [118,157,255]), #(14388.1, [118,157,255]), #(14397.1, [118,157,255]),
	#(14406.1, [118,157,255]), #(14415.2, [118,157,255]), #(14424.2, [118,157,255]), #(14433.2, [118,157,255]), #(14442.3, [118,157,255]),
	#(14451.3, [118,157,255]), #(14460.3, [117,157,255]), #(14469.3, [117,157,255]), #(14478.4, [117,157,255]), #(14487.4, [117,157,255]),
	#(14496.4, [117,157,255]), #(14505.5, [117,157,255]), #(14514.5, [117,157,255]), #(14523.5, [117,157,255]), #(14532.5, [117,157,255]),
	#(14541.6, [117,157,255]), #(14550.6, [117,157,255]), #(14559.6, [117,157,255]), #(14568.6, [117,157,255]), #(14577.7, [117,157,255]),
	#(14586.7, [117,157,255]), #(14595.7, [117,157,255]), #(14604.8, [117,157,255]), #(14613.8, [117,157,255]), #(14622.8, [117,157,255]),
	#(14631.8, [117,157,255]), #(14640.9, [117,157,255]), #(14649.9, [117,157,255]), #(14658.9, [117,157,255]), #(14668.0, [117,157,255]),
	#(14677.0, [115,157,255]), #(14686.0, [115,157,255]), #(14695.0, [115,157,255]), #(14704.1, [115,157,255]), #(14713.1, [115,157,255]),
	#(14722.1, [115,157,255]), #(14731.2, [115,157,255]), #(14740.2, [115,157,255]), #(14749.2, [115,157,255]), #(14758.2, [115,157,255]),
	#(14767.3, [115,157,255]), #(14776.3, [115,157,255]), #(14785.3, [115,157,255]), #(14794.4, [115,157,255]), #(14803.4, [115,157,255]),
	#(14812.4, [115,157,255]), #(14821.4, [115,157,255]), #(14830.5, [115,157,255]), #(14839.5, [115,157,255]), #(14848.5, [115,157,255]),
	#(14857.6, [115,157,255]), #(14866.6, [115,156,255]), #(14875.6, [115,156,255]), #(14884.6, [115,156,255]), #(14893.7, [115,156,255]),
	#(14902.7, [115,156,255]), #(14911.7, [115,156,255]), #(14920.8, [115,156,255]), #(14929.8, [115,156,255]), #(14938.8, [115,156,255]),
	#(14947.8, [115,156,255]), #(14956.9, [115,156,255]), #(14965.9, [115,156,255]), #(14974.9, [115,156,255]), #(14984.0, [115,156,255]),
	#(14993.0, [115,156,255]), #(15002.0, [115,156,255]), #(15011.0, [115,156,255]), #(15020.1, [115,156,255]), #(15029.1, [115,156,255]),
	#(15038.1, [115,156,255]), #(15047.2, [115,156,255]), #(15056.2, [115,156,255]), #(15065.2, [115,156,255]), #(15074.2, [115,156,255]),
	#(15083.3, [115,156,255]), #(15092.3, [115,156,255]), #(15101.3, [115,156,255]), #(15110.3, [115,156,255]), #(15119.4, [115,156,255]),
	#(15128.4, [115,156,255]), #(15137.4, [115,156,255]), #(15146.5, [115,156,255]), #(15155.5, [114,154,255]), #(15164.5, [114,154,255]),
	#(15173.5, [114,154,255]), #(15182.6, [114,154,255]), #(15191.6, [114,154,255]), #(15200.6, [114,154,255]), #(15209.7, [114,154,255]),
	#(15218.7, [114,154,255]), #(15227.7, [114,154,255]), #(15236.7, [114,154,255]), #(15245.8, [114,154,255]), #(15254.8, [114,154,255]),
	#(15263.8, [114,154,255]), #(15272.9, [114,154,255]), #(15281.9, [114,154,255]), #(15290.9, [114,154,255]), #(15299.9, [114,154,255]),
	#(15309.0, [114,154,255]), #(15318.0, [114,154,255]), #(15327.0, [114,154,255]), #(15336.1, [114,154,255]), #(15345.1, [114,154,255]),
	#(15354.1, [114,154,255]), #(15363.1, [114,154,255]), #(15372.2, [114,154,255]), #(15381.2, [114,154,255]), #(15390.2, [114,154,255]),
	#(15399.3, [114,154,255]), #(15408.3, [114,154,255]), #(15417.3, [112,154,255]), #(15426.3, [112,154,255]), #(15435.4, [112,154,255]),
	#(15444.4, [112,154,255]), #(15453.4, [112,154,255]), #(15462.5, [112,154,255]), #(15471.5, [112,154,255]), #(15480.5, [112,154,255]),
	#(15489.5, [112,154,255]), #(15498.6, [112,154,255]), #(15507.6, [112,154,255]), #(15516.6, [112,154,255]), #(15525.7, [112,154,255]),
	#(15534.7, [112,154,255]), #(15543.7, [112,154,255]), #(15552.7, [112,154,255]), #(15561.8, [112,154,255]), #(15570.8, [112,154,255]),
	#(15579.8, [112,154,255]), #(15588.8, [112,154,255]), #(15597.9, [112,154,255]), #(15606.9, [112,154,255]), #(15615.9, [112,154,255]),
	#(15625.0, [112,154,255]), #(15634.0, [112,154,255]), #(15643.0, [112,154,255]), #(15652.0, [112,154,255]), #(15661.1, [112,154,255]),
	#(15670.1, [112,154,255]), #(15679.1, [112,154,255]), #(15688.2, [111,154,255]), #(15697.2, [111,154,255]), #(15706.2, [111,154,255]),
	#(15715.2, [111,154,255]), #(15724.3, [111,154,255]), #(15733.3, [111,154,255]), #(15742.3, [111,154,255]), #(15751.4, [111,154,255]),
	#(15760.4, [111,154,255]), #(15769.4, [111,152,255]), #(15778.4, [111,152,255]), #(15787.5, [111,152,255]), #(15796.5, [111,152,255]),
	#(15805.5, [111,152,255]), #(15814.6, [111,152,255]), #(15823.6, [111,152,255]), #(15832.6, [111,152,255]), #(15841.6, [111,152,255]),
	#(15850.7, [111,152,255]), #(15859.7, [111,152,255]), #(15868.7, [111,152,255]), #(15877.8, [111,152,255]), #(15886.8, [111,152,255]),
	#(15895.8, [111,152,255]), #(15904.8, [111,152,255]), #(15913.9, [111,152,255]), #(15922.9, [111,152,255]), #(15931.9, [111,152,255]),
	#(15941.0, [111,152,255]), #(15950.0, [111,152,255]), #(15959.0, [111,152,255]), #(15968.0, [111,152,255]), #(15977.1, [111,152,255]),
	#(15986.1, [111,152,255]), #(15995.1, [111,152,255]), #(16004.2, [111,152,255]), #(16013.2, [111,152,255]), #(16022.2, [111,152,255]),
	#(16031.2, [111,152,255]), #(16040.3, [111,152,255]), #(16049.3, [111,152,255]), #(16058.3, [111,152,255]), #(16067.4, [111,152,255]),
	#(16076.4, [111,152,255]), #(16085.4, [111,152,255]), #(16094.4, [111,152,255]), #(16103.5, [111,152,255]), #(16112.5, [111,152,255]),
	#(16121.5, [111,152,255]), #(16130.5, [111,152,255]), #(16139.6, [111,152,255]), #(16148.6, [111,152,255]), #(16157.6, [111,152,255]),
	#(16166.7, [111,152,255]), #(16175.7, [111,152,255]), #(16184.7, [111,152,255]), #(16193.7, [111,152,255]), #(16202.8, [111,152,255]),
	#(16211.8, [111,152,255]), #(16220.8, [111,152,255]), #(16229.9, [111,152,255]), #(16238.9, [111,152,255]), #(16247.9, [111,152,255]),
	#(16256.9, [111,152,255]), #(16266.0, [109,152,255]), #(16275.0, [109,152,255]), #(16284.0, [109,152,255]), #(16293.1, [109,152,255]),
	#(16302.1, [109,152,255]), #(16311.1, [109,152,255]), #(16320.1, [109,152,255]), #(16329.2, [109,152,255]), #(16338.2, [109,152,255]),
	#(16347.2, [109,152,255]), #(16356.3, [109,152,255]), #(16365.3, [109,152,255]), #(16374.3, [109,152,255]), #(16383.3, [109,152,255]),
	#(16392.4, [109,152,255]), #(16401.4, [109,152,255]), #(16410.4, [109,152,255]), #(16419.5, [109,152,255]), #(16428.5, [109,152,255]),
	#(16437.5, [109,152,255]), #(16446.5, [109,151,255]), #(16455.6, [109,151,255]), #(16464.6, [109,151,255]), #(16473.6, [109,151,255]),
	#(16482.7, [109,151,255]), #(16491.7, [109,151,255]), #(16500.7, [109,151,255]), #(16509.8, [109,151,255]), #(16518.8, [109,151,255]),
	#(16527.8, [109,151,255]), #(16536.8, [109,151,255]), #(16545.9, [109,151,255]), #(16554.9, [109,151,255]), #(16563.9, [109,151,255]),
	#(16573.0, [109,151,255]), #(16582.0, [108,151,255]), #(16591.0, [108,151,255]), #(16600.0, [108,151,255]), #(16609.1, [108,151,255]),
	#(16618.1, [108,151,255]), #(16627.1, [108,151,255]), #(16636.2, [108,151,255]), #(16645.2, [108,151,255]), #(16654.2, [108,151,255]),
	#(16663.3, [108,151,255]), #(16672.3, [108,151,255]), #(16681.3, [108,151,255]), #(16690.3, [108,151,255]), #(16699.4, [108,151,255]),
	#(16708.4, [108,151,255]), #(16717.4, [108,151,255]), #(16726.5, [108,151,255]), #(16735.5, [108,151,255]), #(16744.5, [108,151,255]),
	#(16753.5, [108,151,255]), #(16762.6, [108,151,255]), #(16771.6, [108,151,255]), #(16780.6, [108,151,255]), #(16789.7, [108,151,255]),
	#(16798.7, [108,151,255]), #(16807.7, [108,151,255]), #(16816.7, [108,151,255]), #(16825.8, [108,149,255]), #(16834.8, [108,149,255]),
	#(16843.8, [108,149,255]), #(16852.9, [108,149,255]), #(16861.9, [108,149,255]), #(16870.9, [108,149,255]), #(16880.0, [108,149,255]),
	#(16889.0, [108,149,255]), #(16898.0, [108,149,255]), #(16907.0, [108,149,255]), #(16916.1, [108,149,255]), #(16925.1, [108,149,255]),
	#(16934.1, [108,149,255]), #(16943.2, [108,149,255]), #(16952.2, [108,149,255]), #(16961.2, [108,149,255]), #(16970.2, [108,149,255]),
	#(16979.3, [108,149,255]), #(16988.3, [108,149,255]), #(16997.3, [108,149,255]), #(17006.4, [108,149,255]), #(17015.4, [108,149,255]),
	#(17024.4, [108,149,255]), #(17033.5, [108,149,255]), #(17042.5, [108,149,255]), #(17051.5, [108,149,255]), #(17060.5, [108,149,255]),
	#(17069.6, [108,149,255]), #(17078.6, [108,149,255]), #(17087.6, [108,149,255]), #(17096.7, [108,149,255]), #(17105.7, [108,149,255]),
	#(17114.7, [108,149,255]), #(17123.7, [108,149,255]), #(17132.8, [108,149,255]), #(17141.8, [108,149,255]), #(17150.8, [108,149,255]),
	#(17159.9, [108,149,255]), #(17168.9, [108,149,255]), #(17177.9, [108,149,255]), #(17186.9, [108,149,255]), #(17196.0, [108,149,255]),
	#(17205.0, [108,149,255]), #(17214.0, [108,149,255]), #(17223.1, [108,149,255]), #(17232.1, [108,149,255]), #(17241.1, [108,149,255]),
	#(17250.2, [108,149,255]), #(17259.2, [107,149,255]), #(17268.2, [107,149,255]), #(17277.2, [107,149,255]), #(17286.3, [107,149,255]),
	#(17295.3, [107,149,255]), #(17304.3, [107,149,255]), #(17313.4, [107,149,255]), #(17322.4, [107,149,255]), #(17331.4, [107,149,255]),
	#(17340.4, [107,149,255]), #(17349.5, [107,149,255]), #(17358.5, [107,149,255]), #(17367.5, [107,149,255]), #(17376.6, [107,149,255]),
	#(17385.6, [107,149,255]), #(17394.6, [107,149,255]), #(17403.7, [107,149,255]), #(17412.7, [107,149,255]), #(17421.7, [107,149,255]),
	#(17430.7, [107,149,255]), #(17439.8, [107,149,255]), #(17448.8, [107,149,255]), #(17457.8, [107,149,255]), #(17466.9, [107,149,255]),
	#(17475.9, [107,149,255]), #(17484.9, [107,149,255]), #(17493.9, [107,149,255]), #(17503.0, [107,149,255]), #(17512.0, [107,149,255]),
	#(17521.0, [107,149,255]), #(17530.1, [107,149,255]), #(17539.1, [107,149,255]), #(17548.1, [107,149,255]), #(17557.2, [107,149,255]),
	#(17566.2, [107,149,255]), #(17575.2, [107,149,255]), #(17584.2, [107,149,255]), #(17593.3, [107,149,255]), #(17602.3, [107,149,255]),
	#(17611.3, [107,149,255]), #(17620.4, [107,149,255]), #(17629.4, [105,147,255]), #(17638.4, [105,147,255]), #(17647.4, [105,147,255]),
	#(17656.5, [105,147,255]), #(17665.5, [105,147,255]), #(17674.5, [105,147,255]), #(17683.6, [105,147,255]), #(17692.6, [105,147,255]),
	#(17701.6, [105,147,255]), #(17710.6, [105,147,255]), #(17719.7, [105,147,255]), #(17728.7, [105,147,255]), #(17737.7, [105,147,255]),
	#(17746.8, [105,147,255]), #(17755.8, [105,147,255]), #(17764.8, [105,147,255]), #(17773.9, [105,147,255]), #(17782.9, [105,147,255]),
	#(17791.9, [105,147,255]), #(17800.9, [105,147,255]), #(17810.0, [105,147,255]), #(17819.0, [105,147,255]), #(17828.0, [105,147,255]),
	#(17837.1, [105,147,255]), #(17846.1, [105,147,255]), #(17855.1, [105,147,255]), #(17864.1, [105,147,255]), #(17873.2, [105,147,255]),
	#(17882.2, [105,147,255]), #(17891.2, [105,147,255]), #(17900.3, [105,147,255]), #(17909.3, [105,147,255]), #(17918.3, [105,147,255]),
	#(17927.4, [105,147,255]), #(17936.4, [105,147,255]), #(17945.4, [105,147,255]), #(17954.4, [105,147,255]), #(17963.5, [105,147,255]),
	#(17972.5, [105,147,255]), #(17981.5, [105,147,255]), #(17990.6, [105,147,255]), #(17999.6, [105,147,255]), #(18008.6, [105,147,255]),
	#(18017.6, [104,147,255]), #(18026.7, [104,147,255]), #(18035.7, [104,147,255]), #(18044.7, [104,147,255]), #(18053.8, [104,147,255]),
	#(18062.8, [104,147,255]), #(18071.8, [104,147,255]), #(18080.8, [104,147,255]), #(18089.9, [104,147,255]), #(18098.9, [104,147,255]),
	#(18107.9, [104,147,255]), #(18117.0, [104,147,255]), #(18126.0, [104,147,255]), #(18135.0, [104,147,255]), #(18144.1, [104,147,255]),
	#(18153.1, [104,147,255]), #(18162.1, [104,147,255]), #(18171.1, [104,147,255]), #(18180.2, [104,147,255]), #(18189.2, [104,147,255]),
	#(18198.2, [104,147,255]), #(18207.3, [104,147,255]), #(18216.3, [104,147,255]), #(18225.3, [104,147,255]), #(18234.3, [104,147,255]),
	#(18243.4, [104,147,255]), #(18252.4, [104,147,255]), #(18261.4, [104,147,255]), #(18270.5, [104,147,255]), #(18279.5, [104,147,255]),
	#(18288.5, [104,147,255]), #(18297.6, [104,147,255]), #(18306.6, [104,147,255]), #(18315.6, [104,147,255]), #(18324.6, [104,147,255]),
	#(18333.7, [104,147,255]), #(18342.7, [104,147,255]), #(18351.7, [104,147,255]), #(18360.8, [104,147,255]), #(18369.8, [104,147,255]),
	#(18378.8, [104,147,255]), #(18387.8, [104,147,255]), #(18396.9, [104,147,255]), #(18405.9, [104,147,255]), #(18414.9, [104,147,255]),
	#(18424.0, [104,147,255]), #(18433.0, [104,147,255]), #(18442.0, [104,147,255]), #(18451.1, [104,147,255]), #(18460.1, [104,147,255]),
	#(18469.1, [104,147,255]), #(18478.1, [104,147,255]), #(18487.2, [104,147,255]), #(18496.2, [104,147,255]), #(18505.2, [104,147,255]),
	#(18514.3, [104,147,255]), #(18523.3, [104,147,255]), #(18532.3, [104,147,255]), #(18541.3, [104,147,255]), #(18550.4, [104,146,255]),
	#(18559.4, [104,146,255]), #(18568.4, [104,146,255]), #(18577.5, [104,146,255]), #(18586.5, [104,146,255]), #(18595.5, [104,146,255]),
	#(18604.5, [104,146,255]), #(18613.6, [104,146,255]), #(18622.6, [104,146,255]), #(18631.6, [104,146,255]), #(18640.7, [104,146,255]),
	#(18649.7, [104,146,255]), #(18658.7, [104,146,255]), #(18667.8, [104,146,255]), #(18676.8, [104,146,255]), #(18685.8, [104,146,255]),
	#(18694.8, [104,146,255]), #(18703.9, [104,146,255]), #(18712.9, [104,146,255]), #(18721.9, [104,146,255]), #(18731.0, [104,146,255]),
	#(18740.0, [104,146,255]), #(18749.0, [104,146,255]), #(18758.0, [104,146,255]), #(18767.1, [104,146,255]), #(18776.1, [104,146,255]),
	#(18785.1, [104,146,255]), #(18794.2, [104,146,255]), #(18803.2, [104,146,255]), #(18812.2, [104,146,255]), #(18821.3, [104,146,255]),
	#(18830.3, [104,146,255]), #(18839.3, [104,146,255]), #(18848.3, [104,146,255]), #(18857.4, [104,146,255]), #(18866.4, [104,146,255]),
	#(18875.4, [104,146,255]), #(18884.5, [103,146,255]), #(18893.5, [103,146,255]), #(18902.5, [103,146,255]), #(18911.5, [103,146,255]),
	#(18920.6, [103,146,255]), #(18929.6, [103,146,255]), #(18938.6, [103,146,255]), #(18947.7, [103,146,255]), #(18956.7, [103,146,255]),
	#(18965.7, [103,146,255]), #(18974.8, [103,146,255]), #(18983.8, [103,146,255]), #(18992.8, [103,146,255]), #(19001.8, [103,146,255]),
	#(19010.9, [103,146,255]), #(19019.9, [103,146,255]), #(19028.9, [103,146,255]), #(19038.0, [103,146,255]), #(19047.0, [103,146,255]),
	#(19056.0, [103,144,255]), #(19065.0, [103,144,255]), #(19074.1, [103,144,255]), #(19083.1, [103,144,255]), #(19092.1, [103,144,255]),
	#(19101.2, [103,144,255]), #(19110.2, [103,144,255]), #(19119.2, [103,144,255]), #(19128.2, [103,144,255]), #(19137.3, [103,144,255]),
	#(19146.3, [103,144,255]), #(19155.3, [103,144,255]), #(19164.4, [103,144,255]), #(19173.4, [103,144,255]), #(19182.4, [103,144,255]),
	#(19191.5, [103,144,255]), #(19200.5, [103,144,255]), #(19209.5, [103,144,255]), #(19218.5, [103,144,255]), #(19227.6, [103,144,255]),
	#(19236.6, [103,144,255]), #(19245.6, [103,144,255]), #(19254.7, [103,144,255]), #(19263.7, [103,144,255]), #(19272.7, [103,144,255]),
	#(19281.7, [103,144,255]), #(19290.8, [103,144,255]), #(19299.8, [103,144,255]), #(19308.8, [103,144,255]), #(19317.9, [103,144,255]),
	#(19326.9, [103,144,255]), #(19335.9, [103,144,255]), #(19345.0, [103,144,255]), #(19354.0, [101,144,255]), #(19363.0, [101,144,255]),
	#(19372.0, [101,144,255]), #(19381.1, [101,144,255]), #(19390.1, [101,144,255]), #(19399.1, [101,144,255]), #(19408.2, [101,144,255]),
	#(19417.2, [101,144,255]), #(19426.2, [101,144,255]), #(19435.2, [101,144,255]), #(19444.3, [101,144,255]), #(19453.3, [101,144,255]),
	#(19462.3, [101,144,255]), #(19471.4, [101,144,255]), #(19480.4, [101,144,255]), #(19489.4, [101,144,255]), #(19498.4, [101,144,255]),
	#(19507.5, [101,144,255]), #(19516.5, [101,144,255]), #(19525.5, [101,144,255]), #(19534.6, [101,144,255]), #(19543.6, [101,144,255]),
	#(19552.6, [101,144,255]), #(19561.7, [101,144,255]), #(19570.7, [101,144,255]), #(19579.7, [101,144,255]), #(19588.7, [101,144,255]),
	#(19597.8, [101,144,255]), #(19606.8, [101,144,255]), #(19615.8, [101,144,255]), #(19624.9, [101,144,255]), #(19633.9, [101,144,255]),
	#(19642.9, [101,144,255]), #(19651.9, [101,144,255]), #(19661.0, [101,144,255]), #(19670.0, [101,144,255]), #(19679.0, [101,144,255]),
	#(19688.1, [101,144,255]), #(19697.1, [101,144,255]), #(19706.1, [101,144,255]), #(19715.2, [101,144,255]), #(19724.2, [101,144,255]),
	#(19733.2, [101,144,255]), #(19742.2, [101,144,255]), #(19751.3, [101,144,255]), #(19760.3, [101,144,255]), #(19769.3, [101,144,255]),
	#(19778.4, [101,144,255]), #(19787.4, [101,144,255]), #(19796.4, [101,144,255]), #(19805.4, [101,144,255]), #(19814.5, [101,144,255]),
	#(19823.5, [101,144,255]), #(19832.5, [101,144,255]), #(19841.6, [101,144,255]), #(19850.6, [101,144,255]), #(19859.6, [100,144,255]),
	#(19868.7, [100,144,255]), #(19877.7, [100,144,255]), #(19886.7, [100,144,255]), #(19895.7, [100,144,255]), #(19904.8, [100,144,255]),
	#(19913.8, [100,144,255]), #(19922.8, [100,144,255]), #(19931.9, [100,144,255]), #(19940.9, [100,144,255]), #(19949.9, [100,144,255]),
	#(19958.9, [100,144,255]), #(19968.0, [100,144,255]), #(19977.0, [100,144,255]), #(19986.0, [100,144,255]), #(19995.1, [100,144,255]),
	#(20004.1, [100,144,255]), #(20013.1, [100,144,255]), #(20022.1, [100,144,255]), #(20031.2, [100,144,255]), #(20040.2, [100,144,255]),
	#(20049.2, [100,144,255]), #(20058.3, [100,144,255]), #(20067.3, [100,144,255]), #(20076.3, [100,144,255]), #(20085.4, [100,144,255]),
	#(20094.4, [100,144,255]), #(20103.4, [100,144,255]), #(20112.4, [100,144,255]), #(20121.5, [100,144,255]), #(20130.5, [100,144,255]),
	#(20139.5, [100,144,255]), #(20148.6, [100,144,255]), #(20157.6, [100,144,255]), #(20166.6, [100,144,255]), #(20175.6, [100,142,255]),
	#(20184.7, [100,142,255]), #(20193.7, [100,142,255]), #(20202.7, [100,142,255]), #(20211.8, [100,142,255]), #(20220.8, [100,142,255]),
	#(20229.8, [100,142,255]), #(20238.9, [100,142,255]), #(20247.9, [100,142,255]), #(20256.9, [100,142,255]), #(20265.9, [100,142,255]),
	#(20275.0, [100,142,255]), #(20284.0, [100,142,255]), #(20293.0, [100,142,255]), #(20302.1, [100,142,255]), #(20311.1, [100,142,255]),
	#(20320.1, [100,142,255]), #(20329.1, [100,142,255]), #(20338.2, [100,142,255]), #(20347.2, [100,142,255]), #(20356.2, [100,142,255]),
	#(20365.3, [100,142,255]), #(20374.3, [100,142,255]), #(20383.3, [100,142,255]), #(20392.3, [100,142,255]), #(20401.4, [100,142,255]),
	#(20410.4, [100,142,255]), #(20419.4, [100,142,255]), #(20428.5, [100,142,255]), #(20437.5, [100,142,255]), #(20446.5, [100,142,255]),
	#(20455.6, [100,142,255]), #(20464.6, [100,142,255]), #(20473.6, [100,142,255]), #(20482.6, [100,142,255]), #(20491.7, [100,142,255]),
	#(20500.7, [100,142,255]), #(20509.7, [100,142,255]), #(20518.8, [100,142,255]), #(20527.8, [100,142,255]), #(20536.8, [100,142,255]),
	#(20545.8, [100,142,255]), #(20554.9, [100,142,255]), #(20563.9, [100,142,255]), #(20572.9, [100,142,255]), #(20582.0, [100,142,255]),
	#(20591.0, [100,142,255]), #(20600.0, [100,142,255]), #(20609.1, [100,142,255]), #(20618.1, [100,142,255]), #(20627.1, [100,142,255]),
	#(20636.1, [100,142,255]), #(20645.2, [100,142,255]), #(20654.2, [100,142,255]), #(20663.2, [100,142,255]), #(20672.3, [100,142,255]),
	#(20681.3, [100,142,255]), #(20690.3, [100,142,255]), #(20699.3, [100,142,255]), #(20708.4, [100,142,255]), #(20717.4, [100,142,255]),
	#(20726.4, [100,142,255]), #(20735.5, [100,142,255]), #(20744.5, [100,142,255]), #(20753.5, [100,142,255]), #(20762.6, [100,142,255]),
	#(20771.6, [100,142,255]), #(20780.6, [100,142,255]), #(20789.6, [100,142,255]), #(20798.7, [100,141,255]), #(20807.7, [100,141,255]),
	#(20816.7, [100,141,255]), #(20825.8, [100,141,255]), #(20834.8, [100,141,255]), #(20843.8, [100,141,255]), #(20852.8, [100,141,255]),
	#(20861.9, [100,141,255]), #(20870.9, [100,141,255]), #(20879.9, [100,141,255]), #(20889.0, [100,141,255]), #(20898.0, [100,141,255]),
	#(20907.0, [100,141,255]), #(20916.0, [100,141,255]), #(20925.1, [100,141,255]), #(20934.1, [100,141,255]), #(20943.1, [100,141,255]),
	#(20952.2, [100,141,255]), #(20961.2, [100,141,255]), #(20970.2, [100,141,255]), #(20979.3, [100,141,255]), #(20988.3, [99,141,255]),
	#(20997.3, [99,141,255]), #(21006.3, [99,141,255]), #(21015.4, [99,141,255]), #(21024.4, [99,141,255]), #(21033.4, [99,141,255]),
	#(21042.5, [99,141,255]), #(21051.5, [99,141,255]), #(21060.5, [99,141,255]), #(21069.5, [99,141,255]), #(21078.6, [99,141,255]),
	#(21087.6, [99,141,255]), #(21096.6, [99,141,255]), #(21105.7, [99,141,255]), #(21114.7, [99,141,255]), #(21123.7, [99,141,255]),
	#(21132.8, [99,141,255]), #(21141.8, [99,141,255]), #(21150.8, [99,141,255]), #(21159.8, [99,141,255]), #(21168.9, [99,141,255]),
	#(21177.9, [99,141,255]), #(21186.9, [99,141,255]), #(21196.0, [99,141,255]), #(21205.0, [99,141,255]), #(21214.0, [99,141,255]),
	#(21223.0, [99,141,255]), #(21232.1, [99,141,255]), #(21241.1, [99,141,255]), #(21250.1, [99,141,255]), #(21259.2, [99,141,255]),
	#(21268.2, [99,141,255]), #(21277.2, [99,141,255]), #(21286.3, [99,141,255]), #(21295.3, [99,141,255]), #(21304.3, [99,141,255]),
	#(21313.3, [99,141,255]), #(21322.4, [99,141,255]), #(21331.4, [99,141,255]), #(21340.4, [99,141,255]), #(21349.5, [99,141,255]),
	#(21358.5, [99,141,255]), #(21367.5, [99,141,255]), #(21376.5, [99,141,255]), #(21385.6, [99,141,255]), #(21394.6, [99,141,255]),
	#(21403.6, [99,141,255]), #(21412.7, [99,141,255]), #(21421.7, [99,141,255]), #(21430.7, [99,141,255]), #(21439.7, [99,141,255]),
	#(21448.8, [99,141,255]), #(21457.8, [99,141,255]), #(21466.8, [99,141,255]), #(21475.9, [99,141,255]), #(21484.9, [99,141,255]),
	#(21493.9, [99,141,255]), #(21503.0, [99,141,255]), #(21512.0, [99,141,255]), #(21521.0, [99,141,255]), #(21530.0, [99,141,255]),
	#(21539.1, [99,141,255]), #(21548.1, [99,141,255]), #(21557.1, [99,141,255]), #(21566.2, [99,141,255]), #(21575.2, [99,141,255]),
	#(21584.2, [99,141,255]), #(21593.2, [99,141,255]), #(21602.3, [99,141,255]), #(21611.3, [99,141,255]), #(21620.3, [97,141,255]),
	#(21629.4, [97,141,255]), #(21638.4, [97,141,255]), #(21647.4, [97,141,255]), #(21656.5, [97,141,255]), #(21665.5, [97,141,255]),
	#(21674.5, [97,141,255]), #(21683.5, [97,141,255]), #(21692.6, [97,141,255]), #(21701.6, [97,141,255]), #(21710.6, [97,141,255]),
	#(21719.7, [97,141,255]), #(21728.7, [97,141,255]), #(21737.7, [97,141,255]), #(21746.7, [97,141,255]), #(21755.8, [97,141,255]),
	#(21764.8, [97,141,255]), #(21773.8, [97,141,255]), #(21782.9, [97,141,255]), #(21791.9, [97,141,255]), #(21800.9, [97,141,255]),
	#(21809.9, [97,141,255]), #(21819.0, [97,141,255]), #(21828.0, [97,141,255]), #(21837.0, [97,141,255]), #(21846.1, [97,141,255]),
	#(21855.1, [97,141,255]), #(21864.1, [97,141,255]), #(21873.2, [97,141,255]), #(21882.2, [97,141,255]), #(21891.2, [97,141,255]),
	#(21900.2, [97,141,255]), #(21909.3, [97,141,255]), #(21918.3, [97,141,255]), #(21927.3, [97,141,255]), #(21936.4, [97,141,255]),
	#(21945.4, [97,141,255]), #(21954.4, [97,141,255]), #(21963.4, [97,141,255]), #(21972.5, [97,141,255]), #(21981.5, [97,141,255]),
	#(21990.5, [97,141,255]), #(21999.6, [97,141,255]), #(22008.6, [97,141,255]), #(22017.6, [97,141,255]), #(22026.7, [97,141,255]),
	#(22035.7, [97,141,255]), #(22044.7, [97,141,255]), #(22053.7, [97,141,255]), #(22062.8, [97,141,255]), #(22071.8, [97,141,255]),
	#(22080.8, [97,141,255]), #(22089.9, [97,141,255]), #(22098.9, [97,141,255]), #(22107.9, [97,141,255]), #(22116.9, [97,141,255]),
	#(22126.0, [97,141,255]), #(22135.0, [97,141,255]), #(22144.0, [97,141,255]), #(22153.1, [97,141,255]), #(22162.1, [97,141,255]),
	#(22171.1, [97,141,255]), #(22180.2, [97,141,255]), #(22189.2, [97,141,255]), #(22198.2, [97,141,255]), #(22207.2, [97,139,255]),
	#(22216.3, [97,139,255]), #(22225.3, [97,139,255]), #(22234.3, [97,139,255]), #(22243.4, [97,139,255]), #(22252.4, [97,139,255]),
	#(22261.4, [97,139,255]), #(22270.4, [97,139,255]), #(22279.5, [97,139,255]), #(22288.5, [97,139,255]), #(22297.5, [96,139,255]),
	#(22306.6, [96,139,255]), #(22315.6, [96,139,255]), #(22324.6, [96,139,255]), #(22333.6, [96,139,255]), #(22342.7, [96,139,255]),
	#(22351.7, [96,139,255]), #(22360.7, [96,139,255]), #(22369.8, [96,139,255]), #(22378.8, [96,139,255]), #(22387.8, [96,139,255]),
	#(22396.9, [96,139,255]), #(22405.9, [96,139,255]), #(22414.9, [96,139,255]), #(22423.9, [96,139,255]), #(22433.0, [96,139,255]),
	#(22442.0, [96,139,255]), #(22451.0, [96,139,255]), #(22460.1, [96,139,255]), #(22469.1, [96,139,255]), #(22478.1, [96,139,255]),
	#(22487.1, [96,139,255]), #(22496.2, [96,139,255]), #(22505.2, [96,139,255]), #(22514.2, [96,139,255]), #(22523.3, [96,139,255]),
	#(22532.3, [96,139,255]), #(22541.3, [96,139,255]), #(22550.4, [96,139,255]), #(22559.4, [96,139,255]), #(22568.4, [96,139,255]),
	#(22577.4, [96,139,255]), #(22586.5, [96,139,255]), #(22595.5, [96,139,255]), #(22604.5, [96,139,255]), #(22613.6, [96,139,255]),
	#(22622.6, [96,139,255]), #(22631.6, [96,139,255]), #(22640.6, [96,139,255]), #(22649.7, [96,139,255]), #(22658.7, [96,139,255]),
	#(22667.7, [96,139,255]), #(22676.8, [96,139,255]), #(22685.8, [96,139,255]), #(22694.8, [96,139,255]), #(22703.8, [96,139,255]),
	#(22712.9, [96,139,255]), #(22721.9, [96,139,255]), #(22730.9, [96,139,255]), #(22740.0, [96,139,255]), #(22749.0, [96,139,255]),
	#(22758.0, [96,139,255]), #(22767.1, [96,139,255]), #(22776.1, [96,139,255]), #(22785.1, [96,139,255]), #(22794.1, [96,139,255]),
	#(22803.2, [96,139,255]), #(22812.2, [96,139,255]), #(22821.2, [96,139,255]), #(22830.3, [96,139,255]), #(22839.3, [96,139,255]),
	#(22848.3, [96,139,255]), #(22857.3, [96,139,255]), #(22866.4, [96,139,255]), #(22875.4, [96,139,255]), #(22884.4, [96,139,255]),
	#(22893.5, [96,139,255]), #(22902.5, [96,139,255]), #(22911.5, [96,139,255]), #(22920.6, [96,139,255]), #(22929.6, [96,139,255]),
	#(22938.6, [96,139,255]), #(22947.6, [96,139,255]), #(22956.7, [96,139,255]), #(22965.7, [96,139,255]), #(22974.7, [96,139,255]),
	#(22983.8, [96,139,255]), #(22992.8, [96,139,255]), #(23001.8, [96,139,255]), #(23010.8, [96,139,255]), #(23019.9, [96,139,255]),
	#(23028.9, [96,139,255]), #(23037.9, [96,139,255]), #(23047.0, [96,139,255]), #(23056.0, [96,139,255]), #(23065.0, [96,139,255]),
	#(23074.1, [96,139,255]), #(23083.1, [96,139,255]), #(23092.1, [96,139,255]), #(23101.1, [96,139,255]), #(23110.2, [96,139,255]),
	#(23119.2, [96,139,255]), #(23128.2, [96,139,255]), #(23137.3, [96,139,255]), #(23146.3, [96,139,255]), #(23155.3, [96,139,255]),
	#(23164.3, [96,139,255]), #(23173.4, [96,139,255]), #(23182.4, [96,139,255]), #(23191.4, [96,139,255]), #(23200.5, [96,139,255]),
	#(23209.5, [96,139,255]), #(23218.5, [96,139,255]), #(23227.5, [96,139,255]), #(23236.6, [96,139,255]), #(23245.6, [96,139,255]),
	#(23254.6, [96,139,255]), #(23263.7, [96,139,255]), #(23272.7, [96,139,255]), #(23281.7, [96,139,255]), #(23290.8, [96,139,255]),
	#(23299.8, [96,139,255]), #(23308.8, [96,139,255]), #(23317.8, [96,139,255]), #(23326.9, [96,139,255]), #(23335.9, [96,139,255]),
	#(23344.9, [96,139,255]), #(23354.0, [96,139,255]), #(23363.0, [96,139,255]), #(23372.0, [96,139,255]), #(23381.0, [96,139,255]),
	#(23390.1, [96,139,255]), #(23399.1, [96,139,255]), #(23408.1, [96,139,255]), #(23417.2, [96,139,255]), #(23426.2, [96,139,255]),
	#(23435.2, [96,139,255]), #(23444.3, [96,139,255]), #(23453.3, [96,139,255]), #(23462.3, [96,139,255]), #(23471.3, [96,139,255]),
	#(23480.4, [96,139,255]), #(23489.4, [96,139,255]), #(23498.4, [96,139,255]), #(23507.5, [96,139,255]), #(23516.5, [96,139,255]),
	#(23525.5, [96,139,255]), #(23534.5, [96,139,255]), #(23543.6, [96,139,255]), #(23552.6, [96,139,255]), #(23561.6, [96,139,255]),
	#(23570.7, [96,139,255]), #(23579.7, [96,139,255]), #(23588.7, [96,139,255]), #(23597.8, [96,139,255]), #(23606.8, [96,139,255]),
	#(23615.8, [96,139,255]), #(23624.8, [96,139,255]), #(23633.9, [96,139,255]), #(23642.9, [96,139,255]), #(23651.9, [96,139,255]),
	#(23661.0, [96,139,255]), #(23670.0, [96,139,255]), #(23679.0, [96,139,255]), #(23688.0, [96,139,255]), #(23697.1, [96,139,255]),
	#(23706.1, [96,139,255]), #(23715.1, [96,139,255]), #(23724.2, [96,139,255]), #(23733.2, [96,139,255]), #(23742.2, [96,139,255]),
	#(23751.2, [96,139,255]), #(23760.3, [96,139,255]), #(23769.3, [96,139,255]), #(23778.3, [96,139,255]), #(23787.4, [96,139,255]),
	#(23796.4, [96,139,255]), #(23805.4, [96,139,255]), #(23814.5, [96,139,255]), #(23823.5, [96,139,255]), #(23832.5, [96,139,255]),
	#(23841.5, [96,139,255]), #(23850.6, [95,139,255]), #(23859.6, [95,139,255]), #(23868.6, [95,139,255]), #(23877.7, [95,138,255]),
	#(23886.7, [95,138,255]), #(23895.7, [95,138,255]), #(23904.7, [95,138,255]), #(23913.8, [95,138,255]), #(23922.8, [95,138,255]),
	#(23931.8, [95,138,255]), #(23940.9, [95,138,255]), #(23949.9, [95,138,255]), #(23958.9, [95,138,255]), #(23968.0, [95,138,255]),
	#(23977.0, [95,138,255]), #(23986.0, [95,138,255]), #(23995.0, [95,138,255]), #(24004.1, [95,138,255]), #(24013.1, [95,138,255]),
	#(24022.1, [95,138,255]), #(24031.2, [95,138,255]), #(24040.2, [95,138,255]), #(24049.2, [95,138,255]), #(24058.2, [95,138,255]),
	#(24067.3, [95,138,255]), #(24076.3, [95,138,255]), #(24085.3, [95,138,255]), #(24094.4, [95,138,255]), #(24103.4, [95,138,255]),
	#(24112.4, [95,138,255]), #(24121.4, [95,138,255]), #(24130.5, [95,138,255]), #(24139.5, [95,138,255]), #(24148.5, [95,138,255]),
	#(24157.6, [95,138,255]), #(24166.6, [95,138,255]), #(24175.6, [95,138,255]), #(24184.7, [95,138,255]), #(24193.7, [95,138,255]),
	#(24202.7, [95,138,255]), #(24211.7, [95,138,255]), #(24220.8, [95,138,255]), #(24229.8, [95,138,255]), #(24238.8, [95,138,255]),
	#(24247.9, [95,138,255]), #(24256.9, [95,138,255]), #(24265.9, [95,138,255]), #(24274.9, [95,138,255]), #(24284.0, [95,138,255]),
	#(24293.0, [95,138,255]), #(24302.0, [95,138,255]), #(24311.1, [95,138,255]), #(24320.1, [95,138,255]), #(24329.1, [95,138,255]),
	#(24338.2, [95,138,255]), #(24347.2, [95,138,255]), #(24356.2, [95,138,255]), #(24365.2, [95,138,255]), #(24374.3, [95,138,255]),
	#(24383.3, [95,138,255]), #(24392.3, [95,138,255]), #(24401.4, [95,138,255]), #(24410.4, [95,138,255]), #(24419.4, [95,138,255]),
	#(24428.4, [95,138,255]), #(24437.5, [95,138,255]), #(24446.5, [95,138,255]), #(24455.5, [95,138,255]), #(24464.6, [95,138,255]),
	#(24473.6, [95,138,255]), #(24482.6, [95,138,255]), #(24491.7, [95,138,255]), #(24500.7, [95,138,255]), #(24509.7, [95,138,255]),
	#(24518.7, [95,138,255]), #(24527.8, [95,138,255]), #(24536.8, [95,138,255]), #(24545.8, [95,138,255]), #(24554.9, [95,138,255]),
	#(24563.9, [95,138,255]), #(24572.9, [95,138,255]), #(24581.9, [95,138,255]), #(24591.0, [95,138,255]), #(24600.0, [95,138,255]),
	#(24609.0, [95,138,255]), #(24618.1, [95,138,255]), #(24627.1, [95,138,255]), #(24636.1, [95,138,255]), #(24645.1, [95,138,255]),
	#(24654.2, [95,138,255]), #(24663.2, [95,138,255]), #(24672.2, [95,138,255]), #(24681.3, [95,138,255]), #(24690.3, [95,138,255]),
	#(24699.3, [95,138,255]), #(24708.4, [95,138,255]), #(24717.4, [95,138,255]), #(24726.4, [94,138,255]), #(24735.4, [94,138,255]),
	#(24744.5, [94,138,255]), #(24753.5, [94,138,255]), #(24762.5, [94,138,255]), #(24771.6, [94,138,255]), #(24780.6, [94,138,255]),
	#(24789.6, [94,138,255]), #(24798.6, [94,138,255]), #(24807.7, [94,138,255]), #(24816.7, [94,138,255]), #(24825.7, [94,136,255]),
	#(24834.8, [94,136,255]), #(24843.8, [94,136,255]), #(24852.8, [94,136,255]), #(24861.9, [94,136,255]), #(24870.9, [94,136,255]),
	#(24879.9, [94,136,255]), #(24888.9, [94,136,255]), #(24898.0, [94,136,255]), #(24907.0, [94,136,255]), #(24916.0, [94,136,255]),
	#(24925.1, [94,136,255]), #(24934.1, [94,136,255]), #(24943.1, [94,136,255]), #(24952.1, [94,136,255]), #(24961.2, [94,136,255]),
	#(24970.2, [94,136,255]), #(24979.2, [94,136,255]), #(24988.3, [94,136,255]), #(24997.3, [94,136,255]), #(25006.3, [94,136,255]),
	#(25015.3, [94,136,255]), #(25024.4, [94,136,255]), #(25033.4, [94,136,255]), #(25042.4, [94,136,255]), #(25051.5, [94,136,255]),
	#(25060.5, [94,136,255]), #(25069.5, [94,136,255]), #(25078.6, [94,136,255]), #(25087.6, [94,136,255]), #(25096.6, [94,136,255]),
	#(25105.6, [94,136,255]), #(25114.7, [94,136,255]), #(25123.7, [94,136,255]), #(25132.7, [94,136,255]), #(25141.8, [94,136,255]),
	#(25150.8, [94,136,255]), #(25159.8, [94,136,255]), #(25168.8, [94,136,255]), #(25177.9, [94,136,255]), #(25186.9, [94,136,255]),
	#(25195.9, [94,136,255]), #(25205.0, [94,136,255]), #(25214.0, [94,136,255]), #(25223.0, [94,136,255]), #(25232.1, [94,136,255]),
	#(25241.1, [94,136,255]), #(25250.1, [94,136,255]), #(25259.1, [94,136,255]), #(25268.2, [94,136,255]), #(25277.2, [94,136,255]),
	#(25286.2, [94,136,255]), #(25295.3, [94,136,255]), #(25304.3, [94,136,255]), #(25313.3, [94,136,255]), #(25322.3, [94,136,255]),
	#(25331.4, [94,136,255]), #(25340.4, [94,136,255]), #(25349.4, [94,136,255]), #(25358.5, [94,136,255]), #(25367.5, [94,136,255]),
	#(25376.5, [94,136,255]), #(25385.6, [94,136,255]), #(25394.6, [94,136,255]), #(25403.6, [94,136,255]), #(25412.6, [94,136,255]),
	#(25421.7, [94,136,255]), #(25430.7, [94,136,255]), #(25439.7, [94,136,255]), #(25448.8, [94,136,255]), #(25457.8, [94,136,255]),
	#(25466.8, [94,136,255]), #(25475.8, [94,136,255]), #(25484.9, [94,136,255]), #(25493.9, [94,136,255]), #(25502.9, [94,136,255]),
	#(25512.0, [94,136,255]), #(25521.0, [94,136,255]), #(25530.0, [94,136,255]), #(25539.0, [94,136,255]), #(25548.1, [94,136,255]),
	#(25557.1, [94,136,255]), #(25566.1, [94,136,255]), #(25575.2, [94,136,255]), #(25584.2, [94,136,255]), #(25593.2, [94,136,255]),
	#(25602.3, [94,136,255]), #(25611.3, [94,136,255]), #(25620.3, [94,136,255]), #(25629.3, [94,136,255]), #(25638.4, [94,136,255]),
	#(25647.4, [94,136,255]), #(25656.4, [94,136,255]), #(25665.5, [94,136,255]), #(25674.5, [94,136,255]), #(25683.5, [94,136,255]),
	#(25692.5, [94,136,255]), #(25701.6, [92,136,255]), #(25710.6, [92,136,255]), #(25719.6, [92,136,255]), #(25728.7, [92,136,255]),
	#(25737.7, [92,136,255]), #(25746.7, [92,136,255]), #(25755.8, [92,136,255]), #(25764.8, [92,136,255]), #(25773.8, [92,136,255]),
	#(25782.8, [92,136,255]), #(25791.9, [92,136,255]), #(25800.9, [92,136,255]), #(25809.9, [92,136,255]), #(25819.0, [92,136,255]),
	#(25828.0, [92,136,255]), #(25837.0, [92,136,255]), #(25846.0, [92,136,255]), #(25855.1, [92,136,255]), #(25864.1, [92,136,255]),
	#(25873.1, [92,136,255]), #(25882.2, [92,136,255]), #(25891.2, [92,136,255]), #(25900.2, [92,136,255]), #(25909.3, [92,136,255]),
	#(25918.3, [92,136,255]), #(25927.3, [92,136,255]), #(25936.3, [92,136,255]), #(25945.4, [92,136,255]), #(25954.4, [92,136,255]),
	#(25963.4, [92,136,255]), #(25972.5, [92,136,255]), #(25981.5, [92,136,255]), #(25990.5, [92,136,255]), #(25999.5, [92,136,255]),
	#(26008.6, [92,136,255]), #(26017.6, [92,136,255]), #(26026.6, [92,136,255]), #(26035.7, [92,136,255]), #(26044.7, [92,136,255]),
	#(26053.7, [92,136,255]), #(26062.7, [92,136,255]), #(26071.8, [92,136,255]), #(26080.8, [92,136,255]), #(26089.8, [92,136,255]),
	#(26098.9, [92,136,255]), #(26107.9, [92,136,255]), #(26116.9, [92,136,255]), #(26126.0, [92,136,255]), #(26135.0, [92,136,255]),
	#(26144.0, [92,136,255]), #(26153.0, [92,136,255]), #(26162.1, [92,136,255]), #(26171.1, [92,136,255]), #(26180.1, [92,136,255]),
	#(26189.2, [92,136,255]), #(26198.2, [92,136,255]), #(26207.2, [92,136,255]), #(26216.2, [92,136,255]), #(26225.3, [92,136,255]),
	#(26234.3, [92,136,255]), #(26243.3, [92,136,255]), #(26252.4, [92,136,255]), #(26261.4, [92,136,255]), #(26270.4, [92,136,255]),
	#(26279.5, [92,136,255]), #(26288.5, [92,136,255]), #(26297.5, [92,136,255]), #(26306.5, [92,136,255]), #(26315.6, [92,136,255]),
	#(26324.6, [92,136,255]), #(26333.6, [92,136,255]), #(26342.7, [92,136,255]), #(26351.7, [92,136,255]), #(26360.7, [92,136,255]),
	#(26369.7, [92,136,255]), #(26378.8, [92,136,255]), #(26387.8, [92,136,255]), #(26396.8, [92,136,255]), #(26405.9, [92,136,255]),
	#(26414.9, [92,136,255]), #(26423.9, [92,136,255]), #(26432.9, [92,136,255]), #(26442.0, [92,136,255]), #(26451.0, [92,136,255]),
	#(26460.0, [92,136,255]), #(26469.1, [92,136,255]), #(26478.1, [92,136,255]), #(26487.1, [92,136,255]), #(26496.2, [92,136,255]),
	#(26505.2, [92,136,255]), #(26514.2, [92,136,255]), #(26523.2, [92,136,255]), #(26532.3, [92,136,255]), #(26541.3, [92,136,255]),
	#(26550.3, [92,136,255]), #(26559.4, [92,136,255]), #(26568.4, [92,136,255]), #(26577.4, [92,136,255]), #(26586.4, [92,136,255]),
	#(26595.5, [92,136,255]), #(26604.5, [92,136,255]), #(26613.5, [92,136,255]), #(26622.6, [92,136,255]), #(26631.6, [92,136,255]),
	#(26640.6, [92,136,255]), #(26649.7, [92,136,255]), #(26658.7, [92,136,255]), #(26667.7, [92,136,255]), #(26676.7, [92,136,255]),
	#(26685.8, [92,136,255]), #(26694.8, [92,136,255]), #(26703.8, [92,136,255]), #(26712.9, [92,136,255]), #(26721.9, [92,136,255]),
	#(26730.9, [92,136,255]), #(26739.9, [92,136,255]), #(26749.0, [92,136,255]), #(26758.0, [92,136,255]), #(26767.0, [92,136,255]),
	#(26776.1, [91,136,255]), #(26785.1, [91,136,255]), #(26794.1, [91,136,255]), #(26803.2, [91,136,255]), #(26812.2, [91,136,255]),
	#(26821.2, [91,136,255]), #(26830.2, [91,136,255]), #(26839.3, [91,136,255]), #(26848.3, [91,136,255]), #(26857.3, [91,136,255]),
	#(26866.4, [91,136,255]), #(26875.4, [91,136,255]), #(26884.4, [91,136,255]), #(26893.4, [91,136,255]), #(26902.5, [91,136,255]),
	#(26911.5, [91,136,255]), #(26920.5, [91,136,255]), #(26929.6, [91,136,255]), #(26938.6, [91,136,255]), #(26947.6, [91,136,255]),
	#(26956.6, [91,136,255]), #(26965.7, [91,136,255]), #(26974.7, [91,136,255]), #(26983.7, [91,136,255]), #(26992.8, [91,136,255]),
	#(27001.8, [91,136,255]), #(27010.8, [91,136,255]), #(27019.9, [91,136,255]), #(27028.9, [91,136,255]), #(27037.9, [91,136,255]),
	#(27046.9, [91,135,255]), #(27056.0, [91,135,255]), #(27065.0, [91,135,255]), #(27074.0, [91,135,255]), #(27083.1, [91,135,255]),
	#(27092.1, [91,135,255]), #(27101.1, [91,135,255]), #(27110.1, [91,135,255]), #(27119.2, [91,135,255]), #(27128.2, [91,135,255]),
	#(27137.2, [91,135,255]), #(27146.3, [91,135,255]), #(27155.3, [91,135,255]), #(27164.3, [91,135,255]), #(27173.4, [91,135,255]),
	#(27182.4, [91,135,255]), #(27191.4, [91,135,255]), #(27200.4, [91,135,255]), #(27209.5, [91,135,255]), #(27218.5, [91,135,255]),
	#(27227.5, [91,135,255]), #(27236.6, [91,135,255]), #(27245.6, [91,135,255]), #(27254.6, [91,135,255]), #(27263.6, [91,135,255]),
	#(27272.7, [91,135,255]), #(27281.7, [91,135,255]), #(27290.7, [91,135,255]), #(27299.8, [91,135,255]), #(27308.8, [91,135,255]),
	#(27317.8, [91,135,255]), #(27326.8, [91,135,255]), #(27335.9, [91,135,255]), #(27344.9, [91,135,255]), #(27353.9, [91,135,255]),
	#(27363.0, [91,135,255]), #(27372.0, [91,135,255]), #(27381.0, [91,135,255]), #(27390.1, [91,135,255]), #(27399.1, [91,135,255]),
	#(27408.1, [91,135,255]), #(27417.1, [91,135,255]), #(27426.2, [91,135,255]), #(27435.2, [91,135,255]), #(27444.2, [91,135,255]),
	#(27453.3, [91,135,255]), #(27462.3, [91,135,255]), #(27471.3, [91,135,255]), #(27480.3, [91,135,255]), #(27489.4, [91,135,255]),
	#(27498.4, [91,135,255]), #(27507.4, [91,135,255]), #(27516.5, [91,135,255]), #(27525.5, [91,135,255]), #(27534.5, [91,135,255]),
	#(27543.6, [91,135,255]), #(27552.6, [91,135,255]), #(27561.6, [91,135,255]), #(27570.6, [91,135,255]), #(27579.7, [91,135,255]),
	#(27588.7, [91,135,255]), #(27597.7, [91,135,255]), #(27606.8, [91,135,255]), #(27615.8, [91,135,255]), #(27624.8, [91,135,255]),
	#(27633.8, [91,135,255]), #(27642.9, [91,135,255]), #(27651.9, [91,135,255]), #(27660.9, [91,135,255]), #(27670.0, [91,135,255]),
	#(27679.0, [91,135,255]), #(27688.0, [91,135,255]), #(27697.1, [91,135,255]), #(27706.1, [91,135,255]), #(27715.1, [91,135,255]),
	#(27724.1, [91,135,255]), #(27733.2, [91,135,255]), #(27742.2, [91,135,255]), #(27751.2, [91,135,255]), #(27760.3, [91,135,255]),
	#(27769.3, [91,135,255]), #(27778.3, [91,135,255]), #(27787.3, [91,135,255]), #(27796.4, [91,135,255]), #(27805.4, [91,135,255]),
	#(27814.4, [91,135,255]), #(27823.5, [91,135,255]), #(27832.5, [91,135,255]), #(27841.5, [91,135,255]), #(27850.5, [91,135,255]),
	#(27859.6, [91,135,255]), #(27868.6, [91,135,255]), #(27877.6, [91,135,255]), #(27886.7, [91,135,255]), #(27895.7, [91,135,255]),
	#(27904.7, [91,135,255]), #(27913.8, [91,135,255]), #(27922.8, [91,135,255]), #(27931.8, [91,135,255]), #(27940.8, [91,135,255]),
	#(27949.9, [91,135,255]), #(27958.9, [91,135,255]), #(27967.9, [91,135,255]), #(27977.0, [91,135,255]), #(27986.0, [91,135,255]),
	#(27995.0, [91,135,255]), #(28004.0, [91,135,255]), #(28013.1, [91,135,255]), #(28022.1, [91,135,255]), #(28031.1, [91,135,255]),
	#(28040.2, [91,135,255]), #(28049.2, [91,135,255]), #(28058.2, [91,135,255]), #(28067.3, [91,135,255]), #(28076.3, [91,135,255]),
	#(28085.3, [91,135,255]), #(28094.3, [91,135,255]), #(28103.4, [91,135,255]), #(28112.4, [91,135,255]), #(28121.4, [91,135,255]),
	#(28130.5, [91,135,255]), #(28139.5, [91,135,255]), #(28148.5, [91,135,255]), #(28157.5, [91,135,255]), #(28166.6, [91,135,255]),
	#(28175.6, [91,135,255]), #(28184.6, [91,135,255]), #(28193.7, [91,135,255]), #(28202.7, [91,135,255]), #(28211.7, [91,135,255]),
	#(28220.8, [91,135,255]), #(28229.8, [91,135,255]), #(28238.8, [91,135,255]), #(28247.8, [91,135,255]), #(28256.9, [91,135,255]),
	#(28265.9, [91,135,255]), #(28274.9, [91,135,255]), #(28284.0, [91,135,255]), #(28293.0, [91,135,255]), #(28302.0, [91,135,255]),
	#(28311.0, [91,135,255]), #(28320.1, [91,135,255]), #(28329.1, [91,135,255]), #(28338.1, [91,133,255]), #(28347.2, [91,133,255]),
	#(28356.2, [91,133,255]), #(28365.2, [91,133,255]), #(28374.2, [91,133,255]), #(28383.3, [91,133,255]), #(28392.3, [91,133,255]),
	#(28401.3, [91,133,255]), #(28410.4, [91,133,255]), #(28419.4, [91,133,255]), #(28428.4, [91,133,255]), #(28437.5, [91,133,255]),
	#(28446.5, [91,133,255]), #(28455.5, [91,133,255]), #(28464.5, [91,133,255]), #(28473.6, [91,133,255]), #(28482.6, [91,133,255]),
	#(28491.6, [91,133,255]), #(28500.7, [91,133,255]), #(28509.7, [91,133,255]), #(28518.7, [91,133,255]), #(28527.7, [91,133,255]),
	#(28536.8, [91,133,255]), #(28545.8, [91,133,255]), #(28554.8, [91,133,255]), #(28563.9, [91,133,255]), #(28572.9, [91,133,255]),
	#(28581.9, [91,133,255]), #(28591.0, [91,133,255]), #(28600.0, [91,133,255]), #(28609.0, [91,133,255]), #(28618.0, [91,133,255]),
	#(28627.1, [91,133,255]), #(28636.1, [91,133,255]), #(28645.1, [91,133,255]), #(28654.2, [91,133,255]), #(28663.2, [91,133,255]),
	#(28672.2, [91,133,255]), #(28681.2, [91,133,255]), #(28690.3, [91,133,255]), #(28699.3, [91,133,255]), #(28708.3, [91,133,255]),
	#(28717.4, [91,133,255]), #(28726.4, [91,133,255]), #(28735.4, [91,133,255]), #(28744.4, [91,133,255]), #(28753.5, [91,133,255]),
	#(28762.5, [91,133,255]), #(28771.5, [91,133,255]), #(28780.6, [91,133,255]), #(28789.6, [91,133,255]), #(28798.6, [91,133,255]),
	#(28807.7, [91,133,255]), #(28816.7, [91,133,255]), #(28825.7, [91,133,255]), #(28834.7, [91,133,255]), #(28843.8, [91,133,255]),
	#(28852.8, [91,133,255]), #(28861.8, [91,133,255]), #(28870.9, [91,133,255]), #(28879.9, [91,133,255]), #(28888.9, [91,133,255]),
	#(28897.9, [91,133,255]), #(28907.0, [91,133,255]), #(28916.0, [91,133,255]), #(28925.0, [91,133,255]), #(28934.1, [91,133,255]),
	#(28943.1, [91,133,255]), #(28952.1, [91,133,255]), #(28961.2, [91,133,255]), #(28970.2, [91,133,255]), #(28979.2, [91,133,255]),
	#(28988.2, [91,133,255]), #(28997.3, [91,133,255]), #(29006.3, [91,133,255]), #(29015.3, [91,133,255]), #(29024.4, [91,133,255]),
	#(29033.4, [91,133,255]), #(29042.4, [91,133,255]), #(29051.4, [91,133,255]), #(29060.5, [91,133,255]), #(29069.5, [91,133,255]),
	#(29078.5, [91,133,255]), #(29087.6, [91,133,255]), #(29096.6, [91,133,255]), #(29105.6, [91,133,255]), #(29114.7, [91,133,255]),
	#(29123.7, [91,133,255]), #(29132.7, [91,133,255]), #(29141.7, [91,133,255]), #(29150.8, [91,133,255]), #(29159.8, [91,133,255]),
	#(29168.8, [91,133,255]), #(29177.9, [91,133,255]), #(29186.9, [91,133,255]), #(29195.9, [91,133,255]), #(29204.9, [91,133,255]),
	#(29214.0, [91,133,255]), #(29223.0, [91,133,255]), #(29232.0, [91,133,255]), #(29241.1, [91,133,255]), #(29250.1, [91,133,255]),
	#(29259.1, [91,133,255]), #(29268.1, [91,133,255]), #(29277.2, [91,133,255]), #(29286.2, [91,133,255]), #(29295.2, [90,133,255]),
	#(29304.3, [90,133,255]), #(29313.3, [90,133,255]), #(29322.3, [90,133,255]), #(29331.4, [90,133,255]), #(29340.4, [90,133,255]),
	#(29349.4, [90,133,255]), #(29358.4, [90,133,255]), #(29367.5, [90,133,255]), #(29376.5, [90,133,255]), #(29385.5, [90,133,255]),
	#(29394.6, [90,133,255]), #(29403.6, [90,133,255]), #(29412.6, [90,133,255]), #(29421.6, [90,133,255]), #(29430.7, [90,133,255]),
	#(29439.7, [90,133,255]), #(29448.7, [90,133,255]), #(29457.8, [90,133,255]), #(29466.8, [90,133,255]), #(29475.8, [90,133,255]),
	#(29484.9, [90,133,255]), #(29493.9, [90,133,255]), #(29502.9, [90,133,255]), #(29511.9, [90,133,255]), #(29521.0, [90,133,255]),
	#(29530.0, [90,133,255]), #(29539.0, [90,133,255]), #(29548.1, [90,133,255]), #(29557.1, [90,133,255]), #(29566.1, [90,133,255]),
	#(29575.1, [90,133,255]), #(29584.2, [90,133,255]), #(29593.2, [90,133,255]), #(29602.2, [90,133,255]), #(29611.3, [90,133,255]),
	#(29620.3, [90,133,255]), #(29629.3, [90,133,255]), #(29638.3, [90,133,255]), #(29647.4, [90,133,255]), #(29656.4, [90,133,255]),
	#(29665.4, [90,133,255]), #(29674.5, [90,133,255]), #(29683.5, [90,133,255]), #(29692.5, [90,133,255]), #(29701.6, [90,133,255]),
	#(29710.6, [90,133,255]), #(29719.6, [90,133,255]), #(29728.6, [90,133,255]), #(29737.7, [90,133,255]), #(29746.7, [90,133,255]),
	#(29755.7, [90,133,255]), #(29764.8, [90,133,255]), #(29773.8, [90,133,255]), #(29782.8, [90,133,255]), #(29791.8, [90,133,255]),
	#(29800.9, [90,133,255]), #(29809.9, [90,133,255]), #(29818.9, [90,133,255]), #(29828.0, [90,133,255]), #(29837.0, [90,133,255]),
	#(29846.0, [90,133,255]), #(29855.1, [90,133,255]), #(29864.1, [90,133,255]), #(29873.1, [90,133,255]), #(29882.1, [90,133,255]),
	#(29891.2, [90,133,255]), #(29900.2, [90,133,255]), #(29909.2, [90,133,255]), #(29918.3, [90,133,255]), #(29927.3, [90,133,255]),
	#(29936.3, [90,133,255]), #(29945.3, [90,133,255]), #(29954.4, [90,133,255]), #(29963.4, [90,133,255]), #(29972.4, [90,133,255]),
	#(29981.5, [90,133,255]), #(29990.5, [90,133,255]), #(29999.5, [90,133,255]), #(30008.6, [90,133,255]), #(30017.6, [90,133,255]),
	#(30026.6, [90,133,255]), #(30035.6, [90,133,255]), #(30044.7, [90,133,255]), #(30053.7, [90,133,255]), #(30062.7, [90,133,255]),
	#(30071.8, [90,133,255]), #(30080.8, [90,133,255]), #(30089.8, [90,133,255]), #(30098.8, [90,133,255]), #(30107.9, [90,133,255]),
	#(30116.9, [90,133,255]), #(30125.9, [90,133,255]), #(30135.0, [90,133,255]), #(30144.0, [90,133,255]), #(30153.0, [90,133,255]),
	#(30162.0, [90,133,255]), #(30171.1, [90,133,255]), #(30180.1, [90,133,255]), #(30189.1, [90,133,255]), #(30198.2, [90,133,255]),
	#(30207.2, [90,133,255]), #(30216.2, [90,133,255]), #(30225.3, [90,133,255]), #(30234.3, [90,133,255]), #(30243.3, [90,133,255]),
	#(30252.3, [90,133,255]), #(30261.4, [90,133,255]), #(30270.4, [90,133,255]), #(30279.4, [90,133,255]), #(30288.5, [90,133,255]),
	#(30297.5, [90,133,255]), #(30306.5, [90,133,255]), #(30315.5, [90,133,255]), #(30324.6, [90,133,255]), #(30333.6, [90,133,255]),
	#(30342.6, [90,133,255]), #(30351.7, [90,133,255]), #(30360.7, [90,133,255]), #(30369.7, [90,133,255]), #(30378.8, [90,133,255]),
	#(30387.8, [90,133,255]), #(30396.8, [90,133,255]), #(30405.8, [90,133,255]), #(30414.9, [90,133,255]), #(30423.9, [90,133,255]),
	#(30432.9, [90,133,255]), #(30442.0, [90,133,255]), #(30451.0, [90,133,255]), #(30460.0, [90,133,255]), #(30469.0, [90,133,255]),
	#(30478.1, [90,133,255]), #(30487.1, [90,133,255]), #(30496.1, [90,133,255]), #(30505.2, [90,133,255]), #(30514.2, [90,133,255]),
	#(30523.2, [90,133,255]), #(30532.3, [90,133,255]), #(30541.3, [90,133,255]), #(30550.3, [90,133,255]), #(30559.3, [90,133,255]),
	#(30568.4, [90,133,255]), #(30577.4, [90,133,255]), #(30586.4, [90,133,255]), #(30595.5, [90,133,255]), #(30604.5, [90,133,255]),
	#(30613.5, [90,133,255]), #(30622.5, [90,133,255]), #(30631.6, [90,133,255]), #(30640.6, [90,133,255]), #(30649.6, [90,133,255]),
	#(30658.7, [90,133,255]), #(30667.7, [90,133,255]), #(30676.7, [90,133,255]), #(30685.7, [90,133,255]), #(30694.8, [90,133,255]),
	#(30703.8, [90,133,255]), #(30712.8, [90,133,255]), #(30721.9, [90,133,255]), #(30730.9, [90,133,255]), #(30739.9, [90,133,255]),
	#(30749.0, [90,133,255]), #(30758.0, [90,133,255]), #(30767.0, [90,133,255]), #(30776.0, [90,133,255]), #(30785.1, [90,133,255]),
	#(30794.1, [88,133,255]), #(30803.1, [88,133,255]), #(30812.2, [88,133,255]), #(30821.2, [88,133,255]), #(30830.2, [88,133,255]),
	#(30839.2, [88,133,255]), #(30848.3, [88,133,255]), #(30857.3, [88,133,255]), #(30866.3, [88,133,255]), #(30875.4, [88,133,255]),
	#(30884.4, [88,133,255]), #(30893.4, [88,133,255]), #(30902.5, [88,133,255]), #(30911.5, [88,133,255]), #(30920.5, [88,133,255]),
	#(30929.5, [88,133,255]), #(30938.6, [88,133,255]), #(30947.6, [88,133,255]), #(30956.6, [88,133,255]), #(30965.7, [88,133,255]),
	#(30974.7, [88,133,255]), #(30983.7, [88,133,255]), #(30992.7, [88,133,255]), #(31001.8, [88,133,255]), #(31010.8, [88,133,255]),
	#(31019.8, [88,133,255]), #(31028.9, [88,133,255]), #(31037.9, [88,133,255]), #(31046.9, [88,133,255]), #(31055.9, [88,133,255]),
	#(31065.0, [88,133,255]), #(31074.0, [88,133,255]), #(31083.0, [88,133,255]), #(31092.1, [88,133,255]), #(31101.1, [88,133,255]),
	#(31110.1, [88,133,255]), #(31119.2, [88,133,255]), #(31128.2, [88,133,255]), #(31137.2, [88,133,255]), #(31146.2, [88,133,255]),
	#(31155.3, [88,133,255]), #(31164.3, [88,133,255]), #(31173.3, [88,133,255]), #(31182.4, [88,133,255]), #(31191.4, [88,133,255]),
	#(31200.4, [88,133,255]), #(31209.4, [88,133,255]), #(31218.5, [88,133,255]), #(31227.5, [88,133,255]), #(31236.5, [88,133,255]),
	#(31245.6, [88,133,255]), #(31254.6, [88,133,255]), #(31263.6, [88,133,255]), #(31272.7, [88,133,255]), #(31281.7, [88,133,255]),
	#(31290.7, [88,133,255]), #(31299.7, [88,133,255]), #(31308.8, [88,133,255]), #(31317.8, [88,133,255]), #(31326.8, [88,133,255]),
	#(31335.9, [88,133,255]), #(31344.9, [88,133,255]), #(31353.9, [88,133,255]), #(31362.9, [88,133,255]), #(31372.0, [88,133,255]),
	#(31381.0, [88,133,255]), #(31390.0, [88,133,255]), #(31399.1, [88,133,255]), #(31408.1, [88,133,255]), #(31417.1, [88,133,255]),
	#(31426.2, [88,133,255]), #(31435.2, [88,133,255]), #(31444.2, [88,131,255]), #(31453.2, [88,131,255]), #(31462.3, [88,131,255]),
	#(31471.3, [88,131,255]), #(31480.3, [88,131,255]), #(31489.4, [88,131,255]), #(31498.4, [88,131,255]), #(31507.4, [88,131,255]),
	#(31516.4, [88,131,255]), #(31525.5, [88,131,255]), #(31534.5, [88,131,255]), #(31543.5, [88,131,255]), #(31552.6, [88,131,255]),
	#(31561.6, [88,131,255]), #(31570.6, [88,131,255]), #(31579.6, [88,131,255]), #(31588.7, [88,131,255]), #(31597.7, [88,131,255]),
	#(31606.7, [88,131,255]), #(31615.8, [88,131,255]), #(31624.8, [88,131,255]), #(31633.8, [88,131,255]), #(31642.9, [88,131,255]),
	#(31651.9, [88,131,255]), #(31660.9, [88,131,255]), #(31669.9, [88,131,255]), #(31679.0, [88,131,255]), #(31688.0, [88,131,255]),
	#(31697.0, [88,131,255]), #(31706.1, [88,131,255]), #(31715.1, [88,131,255]), #(31724.1, [88,131,255]), #(31733.1, [88,131,255]),
	#(31742.2, [88,131,255]), #(31751.2, [88,131,255]), #(31760.2, [88,131,255]), #(31769.3, [88,131,255]), #(31778.3, [88,131,255]),
	#(31787.3, [88,131,255]), #(31796.4, [88,131,255]), #(31805.4, [88,131,255]), #(31814.4, [88,131,255]), #(31823.4, [88,131,255]),
	#(31832.5, [88,131,255]), #(31841.5, [88,131,255]), #(31850.5, [88,131,255]), #(31859.6, [88,131,255]), #(31868.6, [88,131,255]),
	#(31877.6, [88,131,255]), #(31886.6, [88,131,255]), #(31895.7, [88,131,255]), #(31904.7, [88,131,255]), #(31913.7, [88,131,255]),
	#(31922.8, [88,131,255]), #(31931.8, [88,131,255]), #(31940.8, [88,131,255]), #(31949.8, [88,131,255]), #(31958.9, [88,131,255]),
	#(31967.9, [88,131,255]), #(31976.9, [88,131,255]), #(31986.0, [88,131,255]), #(31995.0, [88,131,255]), #(32004.0, [88,131,255]),
	#(32013.1, [88,131,255]), #(32022.1, [88,131,255]), #(32031.1, [88,131,255]), #(32040.1, [88,131,255]), #(32049.2, [88,131,255]),
	#(32058.2, [88,131,255]), #(32067.2, [88,131,255]), #(32076.3, [88,131,255]), #(32085.3, [88,131,255]), #(32094.3, [88,131,255]),
	#(32103.3, [88,131,255]), #(32112.4, [88,131,255]), #(32121.4, [88,131,255]), #(32130.4, [88,131,255]), #(32139.5, [88,131,255]),
	#(32148.5, [88,131,255]), #(32157.5, [88,131,255]), #(32166.6, [88,131,255]), #(32175.6, [88,131,255]), #(32184.6, [88,131,255]),
	#(32193.6, [88,131,255]), #(32202.7, [88,131,255]), #(32211.7, [88,131,255]), #(32220.7, [88,131,255]), #(32229.8, [88,131,255]),
	#(32238.8, [88,131,255]), #(32247.8, [88,131,255]), #(32256.8, [88,131,255]), #(32265.9, [88,131,255]), #(32274.9, [88,131,255]),
	#(32283.9, [88,131,255]), #(32293.0, [88,131,255]), #(32302.0, [88,131,255]), #(32311.0, [88,131,255]), #(32320.1, [88,131,255]),
	#(32329.1, [88,131,255]), #(32338.1, [88,131,255]), #(32347.1, [88,131,255]), #(32356.2, [88,131,255]), #(32365.2, [88,131,255]),
	#(32374.2, [88,131,255]), #(32383.3, [88,131,255]), #(32392.3, [88,131,255]), #(32401.3, [88,131,255]), #(32410.3, [88,131,255]),
	#(32419.4, [88,131,255]), #(32428.4, [88,131,255]), #(32437.4, [88,131,255]), #(32446.5, [88,131,255]), #(32455.5, [88,131,255]),
	#(32464.5, [88,131,255]), #(32473.5, [88,131,255]), #(32482.6, [88,131,255]), #(32491.6, [88,131,255]), #(32500.6, [87,131,255]),
	#(32509.7, [87,131,255]), #(32518.7, [87,131,255]), #(32527.7, [87,131,255]), #(32536.8, [87,131,255]), #(32545.8, [87,131,255]),
	#(32554.8, [87,131,255]), #(32563.8, [87,131,255]), #(32572.9, [87,131,255]), #(32581.9, [87,131,255]), #(32590.9, [87,131,255]),
	#(32600.0, [87,131,255]), #(32609.0, [87,131,255]), #(32618.0, [87,131,255]), #(32627.0, [87,131,255]), #(32636.1, [87,131,255]),
	#(32645.1, [87,131,255]), #(32654.1, [87,131,255]), #(32663.2, [87,131,255]), #(32672.2, [87,131,255]), #(32681.2, [87,131,255]),
	#(32690.3, [87,131,255]), #(32699.3, [87,131,255]), #(32708.3, [87,131,255]), #(32717.3, [87,131,255]), #(32726.4, [87,131,255]),
	#(32735.4, [87,131,255]), #(32744.4, [87,131,255]), #(32753.5, [87,131,255]), #(32762.5, [87,131,255]), #(32771.5, [87,131,255]),
	#(32780.5, [87,131,255]), #(32789.6, [87,131,255]), #(32798.6, [87,131,255]), #(32807.6, [87,131,255]), #(32816.7, [87,131,255]),
	#(32825.7, [87,131,255]), #(32834.7, [87,131,255]), #(32843.7, [87,131,255]), #(32852.8, [87,131,255]), #(32861.8, [87,131,255]),
	#(32870.8, [87,131,255]), #(32879.8, [87,131,255]), #(32888.9, [87,131,255]), #(32897.9, [87,131,255]), #(32906.9, [87,131,255]),
	#(32916.0, [87,131,255]), #(32925.0, [87,131,255]), #(32934.0, [87,131,255]), #(32943.0, [87,131,255]), #(32952.1, [87,131,255]),
	#(32961.1, [87,131,255]), #(32970.1, [87,131,255]), #(32979.1, [87,131,255]), #(32988.2, [87,131,255]), #(32997.2, [87,131,255]),
	#(33006.2, [87,131,255]), #(33015.3, [87,131,255]), #(33024.3, [87,131,255]), #(33033.3, [87,131,255]), #(33042.3, [87,131,255]),
	#(33051.4, [87,131,255]), #(33060.4, [87,131,255]), #(33069.4, [87,131,255]), #(33078.4, [87,131,255]), #(33087.5, [87,131,255]),
	#(33096.5, [87,131,255]), #(33105.5, [87,131,255]), #(33114.6, [87,131,255]), #(33123.6, [87,131,255]), #(33132.6, [87,131,255]),
	#(33141.6, [87,131,255]), #(33150.7, [87,131,255]), #(33159.7, [87,131,255]), #(33168.7, [87,131,255]), #(33177.7, [87,131,255]),
	#(33186.8, [87,131,255]), #(33195.8, [87,131,255]), #(33204.8, [87,131,255]), #(33213.9, [87,131,255]), #(33222.9, [87,131,255]),
	#(33231.9, [87,131,255]), #(33240.9, [87,131,255]), #(33250.0, [87,131,255]), #(33259.0, [87,131,255]), #(33268.0, [87,131,255]),
	#(33277.0, [87,131,255]), #(33286.1, [87,131,255]), #(33295.1, [87,131,255]), #(33304.1, [87,131,255]), #(33313.2, [87,130,255]),
	#(33322.2, [87,130,255]), #(33331.2, [87,130,255]), #(33340.2, [87,130,255]), #(33349.3, [87,130,255]), #(33358.3, [87,130,255]),
	#(33367.3, [87,130,255]), #(33376.3, [87,130,255]), #(33385.4, [87,130,255]), #(33394.4, [87,130,255]), #(33403.4, [87,130,255]),
	#(33412.5, [87,130,255]), #(33421.5, [87,130,255]), #(33430.5, [87,130,255]), #(33439.5, [87,130,255]), #(33448.6, [87,130,255]),
	#(33457.6, [87,130,255]), #(33466.6, [87,130,255]), #(33475.6, [87,130,255]), #(33484.7, [87,130,255]), #(33493.7, [87,130,255]),
	#(33502.7, [87,130,255]), #(33511.8, [87,130,255]), #(33520.8, [87,130,255]), #(33529.8, [87,130,255]), #(33538.8, [87,130,255]),
	#(33547.9, [87,130,255]), #(33556.9, [87,130,255]), #(33565.9, [87,130,255]), #(33574.9, [87,130,255]), #(33584.0, [87,130,255]),
	#(33593.0, [87,130,255]), #(33602.0, [87,130,255]), #(33611.1, [87,130,255]), #(33620.1, [87,130,255]), #(33629.1, [87,130,255]),
	#(33638.1, [87,130,255]), #(33647.2, [87,130,255]), #(33656.2, [87,130,255]), #(33665.2, [87,130,255]), #(33674.3, [87,130,255]),
	#(33683.3, [87,130,255]), #(33692.3, [87,130,255]), #(33701.3, [87,130,255]), #(33710.4, [87,130,255]), #(33719.4, [87,130,255]),
	#(33728.4, [87,130,255]), #(33737.4, [87,130,255]), #(33746.5, [87,130,255]), #(33755.5, [87,130,255]), #(33764.5, [87,130,255]),
	#(33773.6, [87,130,255]), #(33782.6, [87,130,255]), #(33791.6, [87,130,255]), #(33800.6, [87,130,255]), #(33809.7, [87,130,255]),
	#(33818.7, [87,130,255]), #(33827.7, [87,130,255]), #(33836.7, [87,130,255]), #(33845.8, [87,130,255]), #(33854.8, [87,130,255]),
	#(33863.8, [87,130,255]), #(33872.9, [87,130,255]), #(33881.9, [87,130,255]), #(33890.9, [87,130,255]), #(33899.9, [87,130,255]),
	#(33909.0, [87,130,255]), #(33918.0, [87,130,255]), #(33927.0, [87,130,255]), #(33936.0, [87,130,255]), #(33945.1, [87,130,255]),
	#(33954.1, [87,130,255]), #(33963.1, [87,130,255]), #(33972.2, [87,130,255]), #(33981.2, [87,130,255]), #(33990.2, [87,130,255]),
	#(33999.2, [87,130,255]), #(34008.3, [87,130,255]), #(34017.3, [87,130,255]), #(34026.3, [87,130,255]), #(34035.3, [87,130,255]),
	#(34044.4, [87,130,255]), #(34053.4, [87,130,255]), #(34062.4, [87,130,255]), #(34071.5, [87,130,255]), #(34080.5, [87,130,255]),
	#(34089.5, [87,130,255]), #(34098.5, [87,130,255]), #(34107.6, [87,130,255]), #(34116.6, [87,130,255]), #(34125.6, [87,130,255]),
	#(34134.6, [87,130,255]), #(34143.7, [87,130,255]), #(34152.7, [87,130,255]), #(34161.7, [87,130,255]), #(34170.8, [87,130,255]),
	#(34179.8, [87,130,255]), #(34188.8, [87,130,255]), #(34197.8, [87,130,255]), #(34206.9, [87,130,255]), #(34215.9, [87,130,255]),
	#(34224.9, [87,130,255]), #(34233.9, [87,130,255]), #(34243.0, [87,130,255]), #(34252.0, [87,130,255]), #(34261.0, [87,130,255]),
	#(34270.1, [87,130,255]), #(34279.1, [87,130,255]), #(34288.1, [87,130,255]), #(34297.1, [87,130,255]), #(34306.2, [87,130,255]),
	#(34315.2, [87,130,255]), #(34324.2, [87,130,255]), #(34333.2, [87,130,255]), #(34342.3, [87,130,255]), #(34351.3, [87,130,255]),
	#(34360.3, [87,130,255]), #(34369.4, [87,130,255]), #(34378.4, [87,130,255]), #(34387.4, [87,130,255]), #(34396.4, [87,130,255]),
	#(34405.5, [87,130,255]), #(34414.5, [87,130,255]), #(34423.5, [87,130,255]), #(34432.5, [87,130,255]), #(34441.6, [86,130,255]),
	#(34450.6, [86,130,255]), #(34459.6, [86,130,255]), #(34468.7, [86,130,255]), #(34477.7, [86,130,255]), #(34486.7, [86,130,255]),
	#(34495.7, [86,130,255]), #(34504.8, [86,130,255]), #(34513.8, [86,130,255]), #(34522.8, [86,130,255]), #(34531.8, [86,130,255]),
	#(34540.9, [86,130,255]), #(34549.9, [86,130,255]), #(34558.9, [86,130,255]), #(34568.0, [86,130,255]), #(34577.0, [86,130,255]),
	#(34586.0, [86,130,255]), #(34595.0, [86,130,255]), #(34604.1, [86,130,255]), #(34613.1, [86,130,255]), #(34622.1, [86,130,255]),
	#(34631.1, [86,130,255]), #(34640.2, [86,130,255]), #(34649.2, [86,130,255]), #(34658.2, [86,130,255]), #(34667.3, [86,130,255]),
	#(34676.3, [86,130,255]), #(34685.3, [86,130,255]), #(34694.3, [86,130,255]), #(34703.4, [86,130,255]), #(34712.4, [86,130,255]),
	#(34721.4, [86,130,255]), #(34730.4, [86,130,255]), #(34739.5, [86,130,255]), #(34748.5, [86,130,255]), #(34757.5, [86,130,255]),
	#(34766.6, [86,130,255]), #(34775.6, [86,130,255]), #(34784.6, [86,130,255]), #(34793.6, [86,130,255]), #(34802.7, [86,130,255]),
	#(34811.7, [86,130,255]), #(34820.7, [86,130,255]), #(34829.8, [86,130,255]), #(34838.8, [86,130,255]), #(34847.8, [86,130,255]),
	#(34856.8, [86,130,255]), #(34865.9, [86,130,255]), #(34874.9, [86,130,255]), #(34883.9, [86,130,255]), #(34892.9, [86,130,255]),
	#(34902.0, [86,130,255]), #(34911.0, [86,130,255]), #(34920.0, [86,130,255]), #(34929.1, [86,130,255]), #(34938.1, [86,130,255]),
	#(34947.1, [86,130,255]), #(34956.1, [86,130,255]), #(34965.2, [86,130,255]), #(34974.2, [86,130,255]), #(34983.2, [86,130,255]),
	#(34992.2, [86,130,255]), #(35001.3, [86,130,255]), #(35010.3, [86,130,255]), #(35019.3, [86,130,255]), #(35028.4, [86,130,255]),
	#(35037.4, [86,130,255]), #(35046.4, [86,130,255]), #(35055.4, [86,130,255]), #(35064.5, [86,130,255]), #(35073.5, [86,130,255]),
	#(35082.5, [86,130,255]), #(35091.5, [86,130,255]), #(35100.6, [86,130,255]), #(35109.6, [86,130,255]), #(35118.6, [86,130,255]),
	#(35127.7, [86,130,255]), #(35136.7, [86,130,255]), #(35145.7, [86,130,255]), #(35154.7, [86,130,255]), #(35163.8, [86,130,255]),
	#(35172.8, [86,130,255]), #(35181.8, [86,130,255]), #(35190.8, [86,130,255]), #(35199.9, [86,130,255]), #(35208.9, [86,130,255]),
	#(35217.9, [86,130,255]), #(35227.0, [86,130,255]), #(35236.0, [86,130,255]), #(35245.0, [86,130,255]), #(35254.0, [86,130,255]),
	#(35263.1, [86,130,255]), #(35272.1, [86,130,255]), #(35281.1, [86,130,255]), #(35290.1, [86,130,255]), #(35299.2, [86,130,255]),
	#(35308.2, [86,130,255]), #(35317.2, [86,130,255]), #(35326.3, [86,130,255]), #(35335.3, [86,130,255]), #(35344.3, [86,130,255]),
	#(35353.3, [86,130,255]), #(35362.4, [86,130,255]), #(35371.4, [86,130,255]), #(35380.4, [86,130,255]), #(35389.4, [86,130,255]),
	#(35398.5, [86,130,255]), #(35407.5, [86,130,255]), #(35416.5, [86,130,255]), #(35425.6, [86,130,255]), #(35434.6, [86,130,255]),
	#(35443.6, [86,130,255]), #(35452.6, [86,130,255]), #(35461.7, [86,130,255]), #(35470.7, [86,130,255]), #(35479.7, [86,130,255]),
	#(35488.7, [86,130,255]), #(35497.8, [86,130,255]), #(35506.8, [86,130,255]), #(35515.8, [86,130,255]), #(35524.9, [86,130,255]),
	#(35533.9, [86,130,255]), #(35542.9, [86,130,255]), #(35551.9, [86,130,255]), #(35561.0, [86,130,255]), #(35570.0, [86,130,255]),
	#(35579.0, [86,130,255]), #(35588.0, [86,130,255]), #(35597.1, [86,130,255]), #(35606.1, [86,130,255]), #(35615.1, [86,130,255]),
	#(35624.2, [86,130,255]), #(35633.2, [86,130,255]), #(35642.2, [86,130,255]), #(35651.2, [86,130,255]), #(35660.3, [86,130,255]),
	#(35669.3, [86,130,255]), #(35678.3, [86,130,255]), #(35687.3, [86,130,255]), #(35696.4, [86,130,255]), #(35705.4, [86,130,255]),
	#(35714.4, [86,130,255]), #(35723.5, [86,130,255]), #(35732.5, [86,130,255]), #(35741.5, [86,130,255]), #(35750.5, [86,130,255]),
	#(35759.6, [86,130,255]), #(35768.6, [86,130,255]), #(35777.6, [86,130,255]), #(35786.6, [86,130,255]), #(35795.7, [86,130,255]),
	#(35804.7, [86,130,255]), #(35813.7, [86,130,255]), #(35822.8, [86,130,255]), #(35831.8, [86,130,255]), #(35840.8, [86,130,255]),
	#(35849.8, [86,130,255]), #(35858.9, [86,130,255]), #(35867.9, [86,130,255]), #(35876.9, [86,130,255]), #(35885.9, [86,130,255]),
	#(35895.0, [86,130,255]), #(35904.0, [86,130,255]), #(35913.0, [86,130,255]), #(35922.1, [86,130,255]), #(35931.1, [86,130,255]),
	#(35940.1, [86,130,255]), #(35949.1, [86,130,255]), #(35958.2, [86,130,255]), #(35967.2, [86,130,255]), #(35976.2, [86,130,255]),
	#(35985.3, [86,130,255]), #(35994.3, [86,130,255]), #(36003.3, [86,130,255]), #(36012.3, [86,130,255]), #(36021.4, [86,130,255]),
	#(36030.4, [86,130,255]), #(36039.4, [86,130,255]), #(36048.4, [86,130,255]), #(36057.5, [86,130,255]), #(36066.5, [86,130,255]),
	#(36075.5, [86,130,255]), #(36084.6, [86,130,255]), #(36093.6, [86,130,255]), #(36102.6, [86,130,255]), #(36111.6, [86,130,255]),
	#(36120.7, [86,130,255]), #(36129.7, [86,130,255]), #(36138.7, [86,130,255]), #(36147.7, [86,130,255]), #(36156.8, [86,130,255]),
	#(36165.8, [86,130,255]), #(36174.8, [86,130,255]), #(36183.9, [86,130,255]), #(36192.9, [86,130,255]), #(36201.9, [86,130,255]),
	#(36210.9, [86,130,255]), #(36220.0, [86,130,255]), #(36229.0, [86,130,255]), #(36238.0, [86,130,255]), #(36247.0, [86,130,255]),
	#(36256.1, [86,130,255]), #(36265.1, [86,130,255]), #(36274.1, [86,130,255]), #(36283.2, [86,130,255]), #(36292.2, [86,130,255]),
	#(36301.2, [86,130,255]), #(36310.2, [86,130,255]), #(36319.3, [86,130,255]), #(36328.3, [86,130,255]), #(36337.3, [86,130,255]),
	#(36346.3, [86,130,255]), #(36355.4, [86,130,255]), #(36364.4, [86,130,255]), #(36373.4, [86,130,255]), #(36382.5, [86,130,255]),
	#(36391.5, [86,130,255]), #(36400.5, [86,130,255]), #(36409.5, [86,130,255]), #(36418.6, [86,130,255]), #(36427.6, [86,130,255]),
	#(36436.6, [86,130,255]), #(36445.6, [86,130,255]), #(36454.7, [86,130,255]), #(36463.7, [86,130,255]), #(36472.7, [86,130,255]),
	#(36481.8, [86,130,255]), #(36490.8, [86,130,255]), #(36499.8, [86,130,255]), #(36508.8, [86,130,255]), #(36517.9, [86,130,255]),
	#(36526.9, [86,130,255]), #(36535.9, [86,130,255]), #(36544.9, [86,130,255]), #(36554.0, [86,130,255]), #(36563.0, [86,130,255]),
	#(36572.0, [86,130,255]), #(36581.1, [86,130,255]), #(36590.1, [86,130,255]), #(36599.1, [86,130,255]), #(36608.1, [86,130,255]),
	#(36617.2, [86,130,255]), #(36626.2, [86,130,255]), #(36635.2, [86,130,255]), #(36644.2, [86,130,255]), #(36653.3, [86,130,255]),
	#(36662.3, [86,130,255]), #(36671.3, [86,130,255]), #(36680.4, [86,130,255]), #(36689.4, [86,130,255]), #(36698.4, [86,130,255]),
	#(36707.4, [86,130,255]), #(36716.5, [86,130,255]), #(36725.5, [86,130,255]), #(36734.5, [86,130,255]), #(36743.5, [86,130,255]),
	#(36752.6, [86,130,255]), #(36761.6, [86,130,255]), #(36770.6, [86,130,255]), #(36779.7, [86,130,255]), #(36788.7, [86,130,255]),
	#(36797.7, [86,130,255]), #(36806.7, [86,130,255]), #(36815.8, [86,130,255]), #(36824.8, [86,130,255]), #(36833.8, [86,130,255]),
	#(36842.8, [86,130,255]), #(36851.9, [86,130,255]), #(36860.9, [86,130,255]), #(36869.9, [86,130,255]), #(36879.0, [86,130,255]),
	#(36888.0, [86,130,255]), #(36897.0, [86,130,255]), #(36906.0, [86,130,255]), #(36915.1, [86,130,255]), #(36924.1, [86,130,255]),
	#(36933.1, [86,130,255]), #(36942.1, [86,130,255]), #(36951.2, [86,130,255]), #(36960.2, [86,130,255]), #(36969.2, [86,130,255]),
	#(36978.3, [86,130,255]), #(36987.3, [86,130,255]), #(36996.3, [86,130,255]), #(37005.3, [86,130,255]), #(37014.4, [86,130,255]),
	#(37023.4, [86,130,255]), #(37032.4, [86,130,255]), #(37041.4, [86,130,255]), #(37050.5, [86,130,255]), #(37059.5, [86,130,255]),
	#(37068.5, [86,130,255]), #(37077.6, [86,130,255]), #(37086.6, [86,130,255]), #(37095.6, [86,130,255]), #(37104.6, [86,130,255]),
	#(37113.7, [86,130,255]), #(37122.7, [86,130,255]), #(37131.7, [86,130,255]), #(37140.8, [86,130,255]), #(37149.8, [86,130,255]),
	#(37158.8, [86,130,255]), #(37167.8, [86,130,255]), #(37176.9, [86,130,255]), #(37185.9, [86,130,255]), #(37194.9, [86,130,255]),
	#(37203.9, [86,130,255]), #(37213.0, [86,130,255]), #(37222.0, [86,130,255]), #(37231.0, [86,130,255]), #(37240.1, [86,130,255]),
	#(37249.1, [86,130,255]), #(37258.1, [86,130,255]), #(37267.1, [86,130,255]), #(37276.2, [86,130,255]), #(37285.2, [86,130,255]),
	#(37294.2, [86,130,255]), #(37303.2, [86,130,255]), #(37312.3, [86,130,255]), #(37321.3, [86,130,255]), #(37330.3, [86,130,255]),
	#(37339.4, [86,130,255]), #(37348.4, [86,130,255]), #(37357.4, [86,130,255]), #(37366.4, [86,130,255]), #(37375.5, [86,130,255]),
	#(37384.5, [86,130,255]), #(37393.5, [86,130,255]), #(37402.5, [86,130,255]), #(37411.6, [86,130,255]), #(37420.6, [86,130,255]),
	#(37429.6, [86,130,255]), #(37438.7, [86,130,255]), #(37447.7, [86,130,255]), #(37456.7, [86,130,255]), #(37465.7, [86,130,255]),
	#(37474.8, [86,130,255]), #(37483.8, [86,130,255]), #(37492.8, [86,130,255]), #(37501.8, [86,130,255]), #(37510.9, [86,130,255]),
	#(37519.9, [86,130,255]), #(37528.9, [86,130,255]), #(37538.0, [86,130,255]), #(37547.0, [86,130,255]), #(37556.0, [86,130,255]),
	#(37565.0, [86,130,255]), #(37574.1, [86,130,255]), #(37583.1, [86,130,255]), #(37592.1, [86,130,255]), #(37601.1, [86,130,255]),
	#(37610.2, [86,130,255]), #(37619.2, [86,130,255]), #(37628.2, [86,130,255]), #(37637.3, [86,130,255]), #(37646.3, [86,130,255]),
	#(37655.3, [86,130,255]), #(37664.3, [86,130,255]), #(37673.4, [86,130,255]), #(37682.4, [86,130,255]), #(37691.4, [86,130,255]),
	#(37700.4, [86,130,255]), #(37709.5, [86,130,255]), #(37718.5, [86,130,255]), #(37727.5, [86,130,255]), #(37736.6, [86,130,255]),
	#(37745.6, [86,130,255]), #(37754.6, [86,130,255]), #(37763.6, [86,130,255]), #(37772.7, [86,130,255]), #(37781.7, [86,130,255]),
	#(37790.7, [86,130,255]), #(37799.7, [86,130,255]), #(37808.8, [86,130,255]), #(37817.8, [86,130,255]), #(37826.8, [86,130,255]),
	#(37835.9, [86,130,255]), #(37844.9, [86,130,255]), #(37853.9, [86,130,255]), #(37862.9, [86,130,255]), #(37872.0, [86,130,255]),
	#(37881.0, [86,130,255]), #(37890.0, [86,130,255]), #(37899.0, [86,130,255]), #(37908.1, [86,130,255]), #(37917.1, [86,130,255]),
	#(37926.1, [86,130,255]), #(37935.2, [86,130,255]), #(37944.2, [86,130,255]), #(37953.2, [86,130,255]), #(37962.2, [86,130,255]),
	#(37971.3, [86,128,255]))
    _result = [0,0,0]

	if (_k <= _array[1][1]) then (
		_result = _array[1][2]
	) else if (_k >= _array[_array.count][1]) then (
		_result = _array[_array.count][2]
	)else (
        for i = 1 to _array.count do (
        if _array[i][1] == _k then (
			_result = _array[i][2]
			exit
            )else if _array[i][1] > _k do (
                _k1 = _array[i-1][1]
                _k2 = _array[i][1]
                _c1 = _array[i-1][2]
				print _c1
                _c2 = _array[i][2]
				print _c2
                _f = (_k - _k1) / ( (_k2 - _k1) as float )
				print _f
                _result = [ ( _c2[1] + ( ( _c2[1] - _c1[1] ) * _f ) ) as integer, ( _c2[2] + ( ( _c2[2] - _c1[2] ) * _f ) ) as integer, ( _c2[3] + ( ( _c2[3] - _c1[3] ) * _f ) ) as integer ]
				exit
            )
        )
	)
	_result as color
)

fn getColorFromIlluminant _i = (
    _array = #(
    #(0, [255,255,255]), #(1, [255,219,173]), #(2, [229,239,255]), #(3, [255,242,225]), #(4, [255,138,48]),
    #(5, [255,175,96]), #(6, [255,118,31]), #(7, [255,213,161]), #(8, [255,229,193]), #(9, [255,255,255]),
    #(10, [209,225,255]), #(11, [255,252,250]), #(12, [255,184,109]), #(13, [255,149,62]), #(14, [255,124,36]),
    #(15, [255,250,246]), #(16, [255,217,169]), #(17, [255,255,255]), #(18, [255,213,161]), #(19, [255,182,104]),
    #(20, [255,213,161]), #(21, [255,175,96]), #(22, [255,127,39]), #(23, [255,115,29]), #(24, [255,138,48]),
    #(25, [255,184,108]), #(26, [255,127,39]), #(27, [255,184,108]), #(28, [255,138,48]), #(29, [255,175,96]),
    #(30, [255,242,225]))

    fn LookupTableComparator a b = (
        if a[1] > b[1] then 1
        else if a[1] < b[1] then -1
        else 0
    )

    _bsearch = bsearch #(_i) _array LookupTableComparator
    if _bsearch != undefined then _result = _bsearch[2] else _result = [0,0,0]
    _result  as color
)

fn transformColorGamma _color _gamma:2.2 = (
    _color.r = 255 * ((_color.r/255.)^_gamma)
    _color.g = 255 * ((_color.g/255.)^_gamma)
    _color.b = 255 * ((_color.b/255.)^_gamma)
    _color
)

fn exportCameras _step:1 _substeps:1 = (
    _str = ""
    --for _o in cameras where classOf _o != Targetobject and ( classOf _o == Freecamera or classOf _o == Targetcamera ) do (
    for _o in cameras where classOf _o == Freecamera or classOf _o == Targetcamera or classOf _o == Physical do (

        --if target
        if _o.target != undefined do (
            _str += "TargetObject " + normalizeName _o.target.name + " {\n"
            _t_t = maxToHoudiniGetTransforms _o.target _prerotate:false
            _t_p_x = for i in _t_t collect ( #( i[1], i[2].position.x / 100. ) )
            _t_p_y = for i in _t_t collect ( #( i[1], i[2].position.y / 100. ) )
            _t_p_z = for i in _t_t collect ( #( i[1], i[2].position.z / 100. ) )

            _t_r_x = for i in _t_t collect ( #( i[1], ( i[2].rotation as eulerangles ).x ) )
            _t_r_y = for i in _t_t collect ( #( i[1], ( i[2].rotation as eulerangles ).y ) )
            _t_r_z = for i in _t_t collect ( #( i[1], ( i[2].rotation as eulerangles ).z ) )

            _t_s_x = for i in _t_t collect ( #( i[1], i[2].scale.x ) )
            _t_s_y = for i in _t_t collect ( #( i[1], i[2].scale.y ) )
            _t_s_z = for i in _t_t collect ( #( i[1], i[2].scale.z ) )

            _str += "  tx=" + formatTuple _t_p_x  + ";\n"
            _str += "  ty=" + formatTuple _t_p_y  + ";\n"
            _str += "  tz=" + formatTuple _t_p_z  + ";\n"

            _str += "  rx=" + formatTuple _t_r_x  + ";\n"
            _str += "  ry=" + formatTuple _t_r_y  + ";\n"
            _str += "  rz=" + formatTuple _t_r_z  + ";\n"

            --_str += "  sx=" + formatTuple _t_s_x  + ";\n"
            --_str += "  sy=" + formatTuple _t_s_y  + ";\n"
            --_str += "  sz=" + formatTuple _t_s_z  + ";\n"
            _str += "}\n\n"
        )

        _t = maxToHoudiniGetTransforms _o _prerotate:true

        _p_x = for i in _t collect ( #( i[1], i[2].position.x / 100. ) )
        _p_y = for i in _t collect ( #( i[1], i[2].position.y / 100. ) )
        _p_z = for i in _t collect ( #( i[1], i[2].position.z / 100. ) )

        _r_x = for i in _t collect ( #( i[1], ( i[2].rotation as eulerangles ).x ) )
        _r_y = for i in _t collect ( #( i[1], ( i[2].rotation as eulerangles ).y ) )
        _r_z = for i in _t collect ( #( i[1], ( i[2].rotation as eulerangles ).z ) )

        _s_x = for i in _t collect ( #( i[1], i[2].scale.x ) )
        _s_y = for i in _t collect ( #( i[1], i[2].scale.y ) )
        _s_z = for i in _t collect ( #( i[1], i[2].scale.z ) )

        _str += "Camera " + normalizeName  _o.name + " {\n"

        --position
        _str += "  tx=" + formatTuple _p_x + ";\n"
        _str += "  ty=" + formatTuple _p_y + ";\n"
        _str += "  tz=" + formatTuple _p_z + ";\n"

        --rotation
        if _o.target == undefined then (
            _str += "  rx=" + formatTuple _r_x + ";\n"
            _str += "  ry=" + formatTuple _r_y + ";\n"
            _str += "  rz=" + formatTuple _r_z + ";\n"
        )else (
            --only roll angle
            _roll = getPropertyValues _o.controller "roll_angle"
            _str += "  rz=" + formatTuple _roll + ";\n"
        )

        --scale
        --_str += "  sx=" + formatTuple _s_x + ";\n"
        --_str += "  sy=" + formatTuple _s_y + ";\n"
        --_str += "  sz=" + formatTuple _s_z + ";\n"

        --parameters
        --if physical
        if classOf _o == physical then (
            --type=0
            _str += "  CameraPhysical_use=True;\n"




            _str += "  CameraPhysical_parm_distortion_enable=" + formatBoolean( _o.distortion_type == 1 or _o.distortion_type == 2 ) + ";\n"
            _str += "  CameraPhysical_distortion=" + _o.distortion_cubic_amount as string + ";\n"
            _str += "  CameraPhysical_distortion_type='" + _o.distortion_type as string + "';\n"

            _str += "  CameraPhysical_f_number=" + _o.f_number as string + ";\n"
            _str += "  CameraPhysical_lens_shift=" + _o.vertical_tilt_correction as string + ";\n"

            _str += "  CameraPhysical_shutter_speed=" + ( 1. / _o.shutter_length_seconds ) as string + ";\n"

            _str += "  CameraPhysical_ISO=" + _o.iso as string + ";\n"
            _str += "  CameraPhysical_specify_focus=" + formatBoolean _o.specify_focus + ";\n"
            _str += "  CameraPhysical_focus_distance=" + ( _o.focus_distance * 0.01 ) as string + ";\n"
            --targeted=0
            _str += "  CameraPhysical_exposure=" + _o.exposure_value as string + ";\n"

            /*
            _white_balance_color = _o.white_balance_custom
            if _o.white_balance_type == 0 then
                _white_balance_color = getColorFromIlluminant _o.white_balance_illuminant
            else if _o.white_balance_type == 1 then
                _white_balance_color = getColorFromTemperature _o.white_balance_kelvin
            _str += "  CameraPhysical_white_balance=" + formatColor( _white_balance_color ) + ";\n"
            */

            _str += "  CameraPhysical_vignetting=" + _o.vignetting_amount as string + ";\n"
            --_str += "  blades_enable=" + 1
            _str += "  CameraPhysical_blades_num=" + _o.bokeh_blades_number as string + ";\n"
            _str += "  CameraPhysical_blades_rotation=" + _o.pb_bokeh_blades_rotation_degrees as string + ";\n"
            _str += "  CameraPhysical_center_bias=" + _o.bokeh_center_bias as string + ";\n"
            _str += "  CameraPhysical_anisotropy=" + _o.bokeh_anisotropy as string + ";\n"
            _str += "  CameraPhysical_use_dof=" + formatBoolean _o.use_dof + ";\n"
            _str += "  CameraPhysical_use_moblur=" + formatBoolean _o.motion_blur_enabled + ";\n"
            --_str += "  subdivs=" + 1

            --_str += "  CameraPhysical_film_width=" + _o.film_width_mm as string + ";\n"
            --_str += "  aperture=" + _o.film_width_mm as string + ";\n"
            _str += "  CameraPhysical_zoom_factor=" + _o.zoom_factor as string + ";\n"

            --_str += "  CameraPhysical_specify_fov=" + formatBoolean _o.specify_fov + ";\n"
            --_str += "  CameraPhysical_fov=" + _o.fov as string + ";\n"
            --_fov = getPropertyValues _o "fov"
            --_lens = for i in _fov collect ( #( i[1], 0.5 * ( GetRendApertureWidth() / tan( i[2]/2.0 ) ) ) )
            --_str += "  CameraPhysical_focal_length=" + formatTuple _lens + ";\n"
            --_str += "  CameraPhysical_focal_length=" + _o.focal_length_mm as string + ";\n"

            _str += "  CameraPhysical_horizontal_shift=" +  _o.horizontal_tilt_correction as string + ";\n"
            _str += "  CameraPhysical_horizontal_offset=" + formatUnits _o.horizontal_shift + ";\n"
            --_str += "  vertical_offset=" + 0.0094
            --_str += "  bmpaperture_enable=" + 0
            --_str += "  bmpaperture_resolution=" + 631
            _str += "  CameraPhysical_use_vignetting=" +  formatBoolean _o.vignetting_enabled + ";\n"
            _str += "  CameraPhysical_optical_vignetting=" + _o.bokeh_optical_vignetting as string + ";\n"

            if _o.clip_on do (
                _str += "  near=" + formatTuple( getPropertyValues _o "clip_near" _scale:0.01 ) + ";\n"
                _str += "  far=" + formatTuple( getPropertyValues _o "clip_far" _scale:0.01 ) + ";\n"
            )

        )else (
            _str += "  CameraPhysical_use=False;\n"
            _str += "  projection=" + ( if _o.orthoProjection then 1 else 0 ) as string + ";\n"

            if _o.clipManually do (
                _str += "  near=" + formatTuple( getPropertyValues _o "nearclip" _scale:0.01 ) + ";\n"
                _str += "  far=" + formatTuple( getPropertyValues _o "farclip" _scale:0.01 ) + ";\n"
            )
        )

        _fov = getPropertyValues _o "fov"
        _lens = for i in _fov collect ( #( i[1], 0.5 * ( GetRendApertureWidth() / tan( i[2]/2.0 ) ) ) )
        _str += "  focal=" + formatTuple _lens + ";\n"

        _str += "  aperture=" + (getRendApertureWidth()) as string + ";\n"

        _str += "  resx=" + renderWidth as string + ";\n"
        _str += "  resy=" + renderHeight as string + ";\n"
        _str += "  aspect=" + renderPixelAspect as string + ";\n"

        if _o.targetDistance.controller != undefined then
            _str += "  focus=" + formatTuple( getPropertyValues _o "targetDistance" _scale:0.01 ) + ";\n"
        else
            if _o.target != undefined then
                _str += "  focus=" + ( ( distance _o _o.target ) * 0.01 ) as string + ";\n"
            else
                _str += "  focus=" + ( _o.target_distance * 0.01 ) as string + ";\n"

        --if target
        if _o.target != undefined do
            _str += "  target=\"" + normalizeName _o.target.name + "\";\n"

        _str += "}\n\n"
    )
    _str
)

fn exportLights _step:1 _substeps:1 = (

    _str = ""
    for _o in lights where classOf _o != Targetobject and ( classOf _o == VRayLight or classOf _o == VRaySun or classOf _o == VRayAmbientLight or classOf _o == VRayIES ) do (

        --if target
        if _o.target != undefined do (
            _str += "TargetObject " + normalizeName _o.target.name + " {\n"
            _t_t = maxToHoudiniGetTransforms _o.target _prerotate:false
            _t_p_x = for i in _t_t collect ( #( i[1], i[2].position.x / 100. ) )
            _t_p_y = for i in _t_t collect ( #( i[1], i[2].position.y / 100. ) )
            _t_p_z = for i in _t_t collect ( #( i[1], i[2].position.z / 100. ) )

            _t_r_x = for i in _t_t collect ( #( i[1], ( i[2].rotation as eulerangles ).x ) )
            _t_r_y = for i in _t_t collect ( #( i[1], ( i[2].rotation as eulerangles ).y ) )
            _t_r_z = for i in _t_t collect ( #( i[1], ( i[2].rotation as eulerangles ).z ) )

            _t_s_x = for i in _t_t collect ( #( i[1], i[2].scale.x ) )
            _t_s_y = for i in _t_t collect ( #( i[1], i[2].scale.y ) )
            _t_s_z = for i in _t_t collect ( #( i[1], i[2].scale.z ) )

            _str += "  tx=" + formatTuple _t_p_x  + ";\n"
            _str += "  ty=" + formatTuple _t_p_y  + ";\n"
            _str += "  tz=" + formatTuple _t_p_z  + ";\n"

            _str += "  rx=" + formatTuple _t_r_x  + ";\n"
            _str += "  ry=" + formatTuple _t_r_y  + ";\n"
            _str += "  rz=" + formatTuple _t_r_z  + ";\n"

            --_str += "  sx=" + formatTuple _t_s_x  + ";\n"
            --_str += "  sy=" + formatTuple _t_s_y  + ";\n"
            --_str += "  sz=" + formatTuple _t_s_z  + ";\n"
            _str += "}\n\n"
        )

        --type
        _type = ""
        if classOf _o == VRayLight then (
            case _o.type of (
                0 : _type = "LightRectangle"
                1 : _type = "LightDome"
                2 : _type = "LightSphere"
                3 : _type = "LightMesh"
                4 : _type = "LightRectangle"
            )
        )else if classOf _o == VRaySun then (
            _type = "SunLight"
        )else if classOf _o == VRayAmbientLight then (
            _type = "LightAmbient"
        )else if classOf _o == VRayIES then (
            _type = "LightIES"
        )

        _str += _type + " " + normalizeName  _o.name + " {\n"


        _t = maxToHoudiniGetTransforms _o _prerotate:true

        _p_x = for i in _t collect ( #( i[1], i[2].position.x / 100. ) )
        _p_y = for i in _t collect ( #( i[1], i[2].position.y / 100. ) )
        _p_z = for i in _t collect ( #( i[1], i[2].position.z / 100. ) )

        _r_x = for i in _t collect ( #( i[1], ( i[2].rotation as eulerangles ).x ) )
        _r_y = for i in _t collect ( #( i[1], ( i[2].rotation as eulerangles ).y ) )
        _r_z = for i in _t collect ( #( i[1], ( i[2].rotation as eulerangles ).z ) )

        _s_x = for i in _t collect ( #( i[1], i[2].scale.x ) )
        _s_y = for i in _t collect ( #( i[1], i[2].scale.y ) )
        _s_z = for i in _t collect ( #( i[1], i[2].scale.z ) )


        --position
        _str += "  tx=" + formatTuple _p_x + ";\n"
        _str += "  ty=" + formatTuple _p_y + ";\n"
        _str += "  tz=" + formatTuple _p_z + ";\n"

        --rotation
        if _o.target == undefined then (
            _str += "  rx=" + formatTuple _r_x + ";\n"
            _str += "  ry=" + formatTuple _r_y + ";\n"
            _str += "  rz=" + formatTuple _r_z + ";\n"
        )else (
            --only roll angle
            _roll = getpropertyvalues _o.controller "roll_angle"
            _str += "  rz=" + formatTuple _roll + ";\n"
        )

        --scale
        --_str += "  sx=" + formatTuple _s_x + ";\n"
        --_str += "  sy=" + formatTuple _s_y + ";\n"
        --_str += "  sz=" + formatTuple _s_z + ";\n"

        --parameters
        if classOf _o == VRayLight then
        (
            fn get_lightPortal _o = if _o.skylightPortal == false then lightPortal = 0 else ( if _o.simplePortal == false then lightPortal = 1 else lightPortal = 2 )

            --specific parameters
            case _o.type of
            (
                0 : (
                    --Plane
                    _str += "  is_disc=False;\n"
                    _str += "  u_size=" + ( _o.size0 * 2 / 100. ) as string + ";\n"
                    _str += "  v_size=" + ( _o.size1 * 2 / 100. ) as string + ";\n"
                    _str += "  directional=" + _o.lightDistribution as string + ";\n"
                    _str += "  ignoreLightNormals=" + formatBoolean( _o.ignoreNormals ) + ";\n"
                    _str += "  doubleSided=" + formatBoolean( _o.doubleSided ) + ";\n"
                    _str += "  lightPortal=" + (get_lightPortal _o) as string + ";\n"
                    _str += "  noDecay=" + formatBoolean( _o.noDecay ) + ";\n"
                )
                1 : (
                    --Dome
                    _str += "  tex_resolution=" + _o.texmap_resolution as string + ";\n"
                    _str += "  tex_adaptive=" + _o.texmap_adaptiveness as string + ";\n"
                    _str += "  dome_spherical=" + formatBoolean( _o.dome_spherical ) + ";\n"
                    _str += "  affect_alpha=" + formatBoolean( _o.dome_affect_alpha ) + ";\n"
                    --texmap_locktodome pas d'equivalent sous houdini
                    _str += "  dome_rayDistanceMode=" + _o.dome_rayDistanceMode as string + ";\n"
                    _str += "  dome_rayDistance=" + _o.dome_rayDistance as string + ";\n"
                    _str += "  dome_targetRadius=" + ( _o.dome_targetRadius / 100. ) as string + ";\n"
                    _str += "  dome_emitRadius=" + ( _o.dome_emitRadius / 100. ) as string  + ";\n"
                )
                2 : (
                    --Sphere
                    _str += "  radius=" + ( _o.size0 / 100.) as string + ";\n"
                    _str += "  noDecay=" + formatBoolean( _o.noDecay ) + ";\n"
                )
                3 : (
                    --Mesh
                    --flip normals a faire
                    --pick mesh a faire
                    _str += "  ignoreLightNormals=" + formatBoolean( _o.ignoreNormals ) + ";\n"
                    _str += "  doubleSided=" + formatBoolean( _o.doubleSided ) + ";\n"
                    _str += "  lightPortal=" + (get_lightPortal _o) as string + ";\n"
                    _str += "  noDecay=" + formatBoolean( _o.noDecay ) + ";\n"
                )
                4 : (
                    --Disc
                    _str += "  is_disc=True;\n"
                    _str += "  u_size=" + (_o.size0 * 2 / 100.) as string + ";\n"
                    _str += "  v_size=" + (_o.size1 * 2 / 100.) as string + ";\n"
                    _str += "  directional=" + _o.lightDistribution as string + ";\n"
                    _str += "  ignoreLightNormals=" + formatBoolean( _o.ignoreNormals ) + ";\n"
                    _str += "  doubleSided=" + formatBoolean( _o.doubleSided ) + ";\n"
                    _str += "  lightPortal=" + (get_lightPortal _o) as string + ";\n"
                    _str += "  noDecay=" + formatBoolean( _o.noDecay ) + ";\n"
                )
            )

            --common parameters
            _str += "  enabled=" + formatBoolean( _o.on ) + ";\n"

            _str += "  units=" + _o.normalizeColor as string + ";\n"

            _str += "  intensity=" + _o.multiplier as string + ";\n"
            _str += "  color=" + formatColor( _o.color ) + ";\n"
            _str += "  map_color=" + formatBoolean( _o.texmap_on ) + ";\n"

            --options parameters
            --exclude a faire
            _str += "  shadows=" + formatBoolean( _o.castShadows ) + ";\n"
            _str += "  invisible=" + formatBoolean( _o.invisible ) + ";\n"
            _str += "  storeWithIrradianceMap=" + formatBoolean( _o.storeWithIrradMap ) + ";\n"
            _str += "  affectDiffuse=" + formatBoolean( _o.affect_diffuse ) + ";\n"
            _str += "  affectSpecular=" + formatBoolean( _o.affect_specular ) + ";\n"
            _str += "  affectReflections=" + formatBoolean( _o.affect_reflections ) + ";\n"
            _str += "  diffuse_contribution=" + _o.diffuse_contribution as string + ";\n"
            _str += "  specular_contribution=" + _o.specular_contribution as string + ";\n"

            --sampling
            _str += "  subdivs=" + _o.subdivs as string + ";\n"
            _str += "  shadowBias=" + _o.ShadowBias as string + ";\n"
            _str += "  cutoffThreshold=" + _o.cutoffThreshold as string + ";\n"

            --viewport
            --rien a exporter ici

            --advanced options
            _str += "  objectID=" + _o.gbufferchannel as string + ";\n"

            --VRay userProps
            diffuseMult = getUserProp _o "VRay_Diffuse_Multipier"
            if diffuseMult != undefined do _str += "  diffuseMult=" + diffuseMult as string + ";\n"
            causticMult = getUserProp _o "VRay_Caustics_Multipier"
            if causticMult != undefined do _str += "  causticMult=" + causticMult as string + ";\n"
            photonSubdivs = getUserProp _o "VRay_Diffuse_Subdivs"
            if photonSubdivs != undefined do _str += "  photonSubdivs=" + photonSubdivs as string + ";\n"
            causticSubdivs = getUserProp _o "VRay_Caustics_Subdivs"
            if causticSubdivs != undefined do _str += "  causticSubdivs=" + causticSubdivs as string + ";\n"

        )else if classOf _o == VRaySun then
        (
            _str += "  enabled=" + formatBoolean(_o.enabled) + ";\n"
            _str += "  invisible=" + formatBoolean(_o.invisible) + ";\n"
            _str += "  affectDiffuse=" + formatBoolean(_o.affect_diffuse) + ";\n"
            _str += "  diffuse_contribution=" + _o.diffuse_contribution as string + ";\n"
            _str += "  affectSpecular=" + formatBoolean(_o.affect_specular) + ";\n"
            _str += "  specular_contribution=" + _o.specular_contribution as string + ";\n"
            _str += "  atmos_shadows=" + formatBoolean(_o.cast_atmospheric_shadows) + ";\n"
            _str += "  turbidity=" + _o.turbidity as string + ";\n"
            _str += "  ozone=" + _o.ozone as string + ";\n"
            _str += "  intensity_multiplier=" + _o.intensity_multiplier as string + ";\n"
            _str += "  size_multiplier=" + _o.size_multiplier as string + ";\n"
            _str += "  filter_color=" + formatColor( _o.filter_color ) + ";\n"
            _str += "  color_mode=" + _o.color_mode as string + ";\n"
            _str += "  shadow_subdivs=" + _o.shadow_subdivs as string + ";\n"
            _str += "  shadowBias=" + (_o.shadow_bias / 100.) as string + ";\n"
            _str += "  photon_radius=" + (_o.photon_emit_radius / 100) as string + ";\n"
            _str += "  photonSubdivs=" + 500 as string + ";\n" --pas d'equivalent dans max
            _str += "  sky_model=" + _o.sky_model as string + ";\n"
            _str += "  horiz_illum=" + _o.indirect_horiz_illum as string + ";\n"
            _str += "  ground_albedor=" + (_o.ground_albedo.r / 255.) as string + ";\n"
            _str += "  ground_albedog=" + (_o.ground_albedo.g / 255.) as string + ";\n"
            _str += "  ground_albedob=" + (_o.ground_albedo.b / 255.) as string + ";\n"
            --"" _o.blend_angle --pas d'equivalent dans houdini
            --"" _o.horizon_offset --pas d'equivalent dans houdini
            _str += "  water_vapour=" + 2 as string + ";\n" --pas d'equivalent dans max
            _str += "  shadows=" + 1 as string + ";\n" --pas d'equivalent dans max

        )else if classOf _o == VRayAmbientLight then
        (
            _str += "  enabled=" + formatBoolean(_o.enabled) + ";\n"
            _str += "  intensity=" + _o.intensity as string + ";\n"
            _str += "  color=" + formatColor( _o.color ) + ";\n"

        )else if classOf _o == VRayIES then
        (
            fn getlightshapemode _o = if _o.override_shape == true then return 1 else return 0

            -- je sais pas sis quelqu un utilise ce genre de lumiere....
            _str += "  enabled=" + formatBoolean(_o.enabled) + ";\n"
            _str += "  power=" + _o.power as string + ";\n"
            --"rescale_max_intensty," -- pas trouvé d'equivalent sous max ?
            _str += "  ies_file,'" + _o.ies_file + "'\n"
            _str += "  color=" + formatColor( _o.color ) + ";\n"

            _str += "  ies_light_shape=" + (getlightshapemode()) as string
            _str += "  ies_light_height=" + _o.height as string + ";\n"
            _str += "  ies_light_length=" + _o.length as string + ";\n"
            _str += "  ies_light_width=" + _o.width as string + ";\n"
            _str += "  ies_light_diameter=" + _o.diameter as string + ";\n"
            _str += "  filter_color=" + formatColor( _o.color ) + ";\n"
            --"soft_shadows," -- pas trouvé d'equivalent sous max ?
            --"use_global_light_level," -- pas trouvé d'equivalent sous max ?
            --"shadow_subdivs=" + _o.shadow_subdivs as string + ";\n" -- pas trouvé d'equivalent sous max ?
            _str += "  shadowBias=" + _o.shadow_bias as string + ";\n"
            _str += "  affectDiffuse=" + formatBoolean(_o.affect_diffuse) + ";\n"
            _str += "  diffuse_contribution=" + _o.diffuse_contribution as string + ";\n"
            _str += "  affectSpecular=" + formatBoolean(_o.affect_specular) + ";\n"
            _str += "  specular_contribution=" + _o.specular_contribution as string + ";\n"
        )

        --if target
        if _o.target != undefined do
            _str += "  target=\"" + normalizeName _o.target.name + "\";\n"

        _str += "}\n\n"
    )
    _str
)

fn formatArray _array = (
	_result = ""
	if _array.count > 0 do (
		_result = _array[1] as string
		if _array.count > 1 do (
			for i = 2 to _array.count do
				_result += "," + _array[i] as string
		)
	)
	_result
)

fn getLayerChidren _layer _nodes_cnt:0 = (
    --recursive fn
    _nodes_cnt += (for _o in (refs.dependentNodes _layer) where _o.isHidden == false and _o.renderable == true collect _o).count
    if _layer.getNumChildren() > 0 do
    for _i=1 to (_layer.getNumChildren()) do _nodes_cnt += getLayerChidren (_layer.getChild _i).layerAsRefTarg _nodes_cnt:_nodes_cnt
    _nodes_cnt
)

fn getLayers = (

	--get all layers
	_layers = for _i = 0 to (LayerManager.count-1)  collect ILayerManager.getLayerObject _i

	--filter layers by node count, keep only layers with visible and rendered children (recursive)
	_layers = for _layer in _layers where (getLayerChidren _layer) != 0 collect _layer
	_layers
)

fn exportCustomSettings = (
    _str = ""
    try(
        _name = normalizeName( getFilenameFile maxfilename )
        _cam = if getActiveCamera() != undefined then normalizeName( (getActiveCamera()).name ) else ""
        _fps = (framerate as float) as string
        _range = [animationrange.start.frame as integer , animationrange.end.frame as integer] as string
        _frame = (currenttime.frame as float) as string
        _str += "\nCustomSettings scene_settings {\n  name=\"" + _name + "\";\n  camera=\"" + _cam + "\";\n  fps=" + _fps + ";\n  range=" + _range + ";\n  frame=" + _frame + ";\n}\n"
    )catch()
    /*
    try(
        _aa_filter = if renderers.current.filter_on == false then 0 else filterKernelConvert renderers.current.filter_kernel as string
        _str += "\nSettingsImageSampler aa_filter {\n  filter_type=" + _aa_filter + ";\n}\n"
    )catch()
    */
    try(
        _focus_from_camera = formatBoolean renderers.current.dof_getFromCamera
        _str += "\nSettingsCameraDof settingsCameraDOF {\n  focus_from_camera=" + _focus_from_camera + ";\n}\n"
    )catch()

    try(
        for _layer in (getLayers()) do (
            _lname = normalizeName(_layer.name)
            if _lname == "0" do _lname = "default"
            _str += "\nSceneLayer " + _lname + " {\n"
            --_str += "  hierarchy=" + getLayerHierarchy _layer + ";\n"
            _lparent = _layer.getParent()
            _lpname = ""
            if _lparent != undefined do _lpname = normalizeName(_lparent.name)
            if _lpname == "0" do _lpname = "default"
            _str += "  parent=" + _lpname + ";\n"
            _str += "  nodes=List(" + formatArray(for _o in (refs.dependentNodes _layer) where _o.isHidden == false and _o.renderable == true collect normalizeName(_o.name)) + ");\n"
            --_str += "  color=" + formatColor _layer.wirecolor + ";\n"
            _str += "}\n"
        )
    )catch()
    _str
)

fn getUsedUVChannels _o = (
    _used_channels = #()
    if classOf _o == Editable_Poly or classOf _o == PolyMeshObject then (
        for i in 0 to polyOp.getNumMaps _o do
            if polyOp.getMapSupport _o i then append _used_channels i
    ) else (
        for i in 0 to meshOp.getNumMaps _o do
            if meshOp.getMapSupport _o i then append _used_channels i
    )
    _used_channels
)

fn exportScene = (
    _dir = sysinfo.tempdir + "houdini_export_temp\\"

    makeDir _dir

    _filename = _dir +  normalizeName(getFilenameFile maxfilename)

    _script = "#scene_export\n\n"

    _vray_light_meshs = for _o in getClassInstances VRayLight where _o.type == 3 collect (refs.dependentNodes _o)[1]

    try(
        suspendEditing()
        for _o in _vray_light_meshs do extractLightMesh _o
        resumeEditing()
    )catch(resumeEditing();print "error while creating temporary light mesh objects")

    writeToFile ( _filename + "_geometries.vrscene" ) (exportGeometries _dir)
    writeToFile ( _filename + "_cameras.vrscene" ) (exportCameras())
    writeToFile ( _filename + "_settings.vrscene" ) (exportCustomSettings())
    --writeToFile ( _filename + "_lights.vrscene" ) (exportLights())

    try(
        enabledVRActiveShade = ((renderers.activeShade.classid[1] == 1770671000) and (renderers.activeShade.classid[2] == 1323107829))
		if (not enabledVRActiveShade) do renderers.activeShade=VRayRT()

        suspendEditing()

        _valid_geometries = getValidGeometries()

        _substitute_mesh = mesh name:"tmp_mesh" numverts:0 numfaces:0
        for _o in _valid_geometries do (
            /*addModifier _o (DeleteMesh name:"_delete_mesh_tmp")
            for _id in getUsedUVChannels _o do (
                addModifier _o (UVW_Mapping_Clear mapID:_id name:"_delete_uv_tmp")
            )*/
            addModifier _o (Substitute name:"_substitute_mesh_tmp" ObjectReference:_substitute_mesh RetainPosition:false RetainLocalRotation:false)
        )

        vrayExportRTScene ( _filename + ".vrscene" ) exportCompressed:false exportHEXFormatMesh:false exportHEXFormatTransf:false separateFiles:true exportView:false exportLights:true exportGeometry:true exportNodes:true exportMaterials:true exportTextures:true exportBitmaps:true prefix:"" stripPaths:false

        for _o in _valid_geometries do (
            for i = _o.modifiers.count to 1 by -1 do (
                _m = _o.modifiers[i]
                --if _m.name == "_delete_mesh_tmp" or _m.name == "_delete_uv_tmp" do deleteModifier _o _m
                if _m.name == "_substitute_mesh_tmp" do deleteModifier _o _m
            )
        )

        delete _substitute_mesh

        resumeEditing()

    )catch(resumeEditing();print "error while creating .vrscene file...")

    renderSceneDialog.commit()

    try(
        appendLineToFile ( _filename + ".vrscene" ) "#include \"%\"\n" (_filename + "_cameras.vrscene")
        appendLineToFile ( _filename + ".vrscene" ) "#include \"%\"\n" (_filename + "_geometries.vrscene")
        appendLineToFile ( _filename + ".vrscene" ) "#include \"%\"\n" (_filename + "_settings.vrscene")
    )catch(print "cannot append lines to .vrscene file...")

    try(
        suspendEditing()
        for _o in _vray_light_meshs do deleteLightMesh _o
        resumeEditing()
    )catch(resumeEditing();print "error while deleting temporary light mesh objects")


    try(
        suspendEditing()
        for _o in geometry do if findString _o.name "__group" != undefined do delete _o
        resumeEditing()
    )catch(resumeEditing();print "error while deleting temporary group objects")

    try(
        suspendEditing()
        for _o in geometry do if findString _o.name "__hidden" != undefined do (
            _o.isHidden = false
            _o.name = trimRight _o.name "__hidden"
        )
        resumeEditing()
    )catch(resumeEditing();print "cannot unhide objects...")

    _script += "filename," + _filename + ".vrscene" + "\n"

    setclipboardText _script

    print "scene successfully exported"

)


with undo "Export Scene To Clipboard" on
     exportScene()
